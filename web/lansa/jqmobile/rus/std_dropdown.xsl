<?xml version="1.0" encoding="UTF-8"?><!--(c) 2011, 2013 LANSA--><!--jqMobile Standard Dropdown--><!--$UTCDate:: 2013-05-13 00:59:53Z $--><!--$Revision:: 14 $--><xsl:transform version="1.0" exclude-result-prefixes="lxml wd msxsl exslt" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:lxml="http://www.lansa.com/2002/XML/Runtime-Data" xmlns:wd="http://www.lansa.com/2002/XSL/Weblet-Design" xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:exslt="http://exslt.org/common" xmlns="http://www.w3.org/1999/xhtml"><xsl:import href="std_types.xsl"></xsl:import><xsl:import href="std_keys.xsl"></xsl:import><xsl:import href="std_util.xsl"></xsl:import><xsl:output method="xml" omit-xml-declaration="yes" encoding="UTF-8" indent="no"></xsl:output><lxml:data><lxml:internal_id id="std_dropdown"></lxml:internal_id><lxml:dropdown><lxml:item><lxml:caption>Item 1</lxml:caption><lxml:value>Item 1</lxml:value></lxml:item><lxml:item><lxml:caption>Item 2</lxml:caption><lxml:value>Item 2</lxml:value></lxml:item></lxml:dropdown></lxml:data><xsl:template name="std_dropdown"><xsl:param name="name"></xsl:param><xsl:param name="id" select="concat($lweb_WRName,'_',$name)"></xsl:param><xsl:param name="value" select="''"></xsl:param><xsl:param name="addErrorDiv" select="true()"></xsl:param><xsl:param name="autofocus" select="false()"></xsl:param><xsl:param name="class"></xsl:param><xsl:param name="corners" select="true()"></xsl:param><xsl:param name="disabled" select="false()"></xsl:param><xsl:param name="displayMode"></xsl:param><xsl:param name="fieldContainWrapper" select="true()"></xsl:param><xsl:param name="form"></xsl:param><xsl:param name="hideIf" select="false()"></xsl:param><xsl:param name="hideLabel" select="false()"></xsl:param><xsl:param name="icon" select="''"></xsl:param><xsl:param name="iconPosition" select="''"></xsl:param><xsl:param name="iconShadow" select="true()"></xsl:param><xsl:param name="items" select="document('')/*/lxml:data/lxml:dropdown"></xsl:param><xsl:param name="inline" select="false()"></xsl:param><xsl:param name="label"></xsl:param><xsl:param name="mini" select="false()"></xsl:param><xsl:param name="multiple" select="false()"></xsl:param><xsl:param name="multiSelectCodeField"></xsl:param><xsl:param name="multiSelectListname"></xsl:param><xsl:param name="overlaySwatch" select="''"></xsl:param><xsl:param name="placeholder" select="$label"></xsl:param><xsl:param name="rdmlxDataType"></xsl:param><xsl:param name="required" select="false()"></xsl:param><xsl:param name="selectorValueField"></xsl:param><xsl:param name="shadow" select="true()"></xsl:param><xsl:param name="style"></xsl:param><xsl:param name="swatch" select="''"></xsl:param><xsl:param name="tabindex"></xsl:param><xsl:param name="title"></xsl:param><xsl:param name="updateFieldsToSubmit" select="document('')/*/lxml:data/lxml:json[not(@id)]"></xsl:param><xsl:param name="updateOnFieldChange" select="''"></xsl:param><xsl:param name="updateProtocol"></xsl:param><xsl:param name="updateWamName" select="$lweb_WAMName"></xsl:param><xsl:param name="updateWrName"></xsl:param><xsl:param name="useNativeControl" select="true()"></xsl:param><xsl:variable name="itemsLocalName" select="local-name($items)"></xsl:variable><xsl:variable name="itemsSourceIsXml" select="boolean($items) and (($itemsLocalName = 'caption_value_pairs') or ($itemsLocalName = 'picklist'))"></xsl:variable><xsl:variable name="itemsSourceIsList" select="boolean($items) and ($itemsLocalName = 'source_list')"></xsl:variable><xsl:if test="not($hideIf) or $lweb_design_mode"><xsl:variable name="bMultiSel" select="$multiple and $multiSelectListname != '' and $multiSelectCodeField != ''"></xsl:variable><xsl:variable name="list_xml"><xsl:if test="$itemsSourceIsXml"><xsl:call-template name="expand_mtxt_in_xml_items.private"><xsl:with-param name="items" select="$items"></xsl:with-param></xsl:call-template></xsl:if></xsl:variable><xsl:variable name="theFieldElement"><xsl:choose><xsl:when test="$displayMode='output'"><span data-lstdField="{$name}" data-lstdValue="{$value}" id="{$id}"><xsl:attribute name="class"><xsl:value-of select="concat('lstd_Field ',$class)"></xsl:value-of></xsl:attribute><xsl:if test="$title"><xsl:attribute name="title"><xsl:value-of select="$title"></xsl:value-of></xsl:attribute></xsl:if><xsl:if test="$style"><xsl:attribute name="style"><xsl:value-of select="$style"></xsl:value-of></xsl:attribute></xsl:if><xsl:comment></xsl:comment></span></xsl:when><xsl:otherwise><select id="{$id}" name="{$name}" size="1" data-lstddatatype="{$rdmlxDataType}"><xsl:if test="$useNativeControl = false()"><xsl:attribute name="data-native-menu">false</xsl:attribute></xsl:if><xsl:if test="$disabled"><xsl:attribute name="disabled">disabled</xsl:attribute></xsl:if><xsl:if test="$autofocus"><xsl:attribute name="autofocus">autofocus</xsl:attribute></xsl:if><xsl:if test="$required"><xsl:attribute name="required">required</xsl:attribute></xsl:if><xsl:if test="$bMultiSel"><xsl:attribute name="multiple">multiple</xsl:attribute><xsl:attribute name="data-lstdmultiselect"><xsl:value-of select="$multiSelectListname"></xsl:value-of><xsl:text>,</xsl:text><xsl:value-of select="$multiSelectCodeField"></xsl:value-of></xsl:attribute></xsl:if><xsl:attribute name="class"><xsl:value-of select="concat('lstd_Field ',$class)"></xsl:value-of></xsl:attribute><xsl:if test="$tabindex"><xsl:attribute name="tabindex"><xsl:value-of select="$tabindex"></xsl:value-of></xsl:attribute></xsl:if><xsl:if test="$title"><xsl:attribute name="title"><xsl:value-of select="$title"></xsl:value-of></xsl:attribute></xsl:if><xsl:if test="$style"><xsl:attribute name="style"><xsl:value-of select="$style"></xsl:value-of></xsl:attribute></xsl:if><xsl:if test="$mini"><xsl:attribute name="data-mini">true</xsl:attribute></xsl:if><xsl:if test="$swatch != ''"><xsl:attribute name="data-theme"><xsl:value-of select="$swatch"></xsl:value-of></xsl:attribute></xsl:if><xsl:if test="$form"><xsl:attribute name="form"><xsl:value-of select="$form"></xsl:value-of></xsl:attribute></xsl:if><xsl:if test="$icon != ''"><xsl:attribute name="data-icon"><xsl:value-of select="$icon"></xsl:value-of></xsl:attribute><xsl:if test="$iconPosition != ''"><xsl:attribute name="data-iconpos"><xsl:value-of select="$iconPosition"></xsl:value-of></xsl:attribute></xsl:if><xsl:if test="$iconShadow = false"><xsl:attribute name="data-iconshadow">false</xsl:attribute></xsl:if></xsl:if><xsl:if test="$corners = false()"><xsl:attribute name="data-corners">false</xsl:attribute></xsl:if><xsl:if test="$shadow = false()"><xsl:attribute name="data-shadow">false</xsl:attribute></xsl:if><xsl:if test="$inline"><xsl:attribute name="data-inline">true</xsl:attribute></xsl:if><xsl:comment></xsl:comment></select><xsl:if test="$addErrorDiv"><div id="{$id}_error" class="lstdFieldError"><xsl:value-of select="' '"></xsl:value-of><xsl:comment /></div></xsl:if></xsl:otherwise></xsl:choose></xsl:variable><xsl:choose><xsl:when test="$fieldContainWrapper = false()"><label for="{$id}"><xsl:if test="$hideLabel"><xsl:attribute name="class">ui-hidden-accessible</xsl:attribute></xsl:if><xsl:value-of select="concat($label, ' ')"></xsl:value-of></label><xsl:text></xsl:text><xsl:choose><xsl:when test="$lweb_is_msxsl_nodeset"><xsl:copy-of select="msxsl:node-set($theFieldElement)"></xsl:copy-of></xsl:when><xsl:when test="$lweb_is_exslt_nodeset"><xsl:copy-of select="exslt:node-set($theFieldElement)"></xsl:copy-of></xsl:when></xsl:choose></xsl:when><xsl:otherwise><div data-role="fieldcontain"><xsl:if test="$hideLabel"><xsl:attribute name="class">ui-hide-label</xsl:attribute></xsl:if><label for="{$id}"><xsl:value-of select="concat($label, ' ')"></xsl:value-of></label><xsl:choose><xsl:when test="$lweb_is_msxsl_nodeset"><xsl:copy-of select="msxsl:node-set($theFieldElement)"></xsl:copy-of></xsl:when><xsl:when test="$lweb_is_exslt_nodeset"><xsl:copy-of select="exslt:node-set($theFieldElement)"></xsl:copy-of></xsl:when></xsl:choose></div></xsl:otherwise></xsl:choose><script type="text/javascript"><xsl:text disable-output-escaping="yes">//&lt;![CDATA[</xsl:text>
Lstd.Weblets.registerWeblet('<xsl:value-of select="$id"></xsl:value-of>', new Lstd.Weblets.stdDropdown(), {
	displayMode: "<xsl:value-of select="$displayMode"></xsl:value-of>",
	value: "<xsl:value-of select="$value"></xsl:value-of>",
	selectorValueField: "<xsl:value-of select="$selectorValueField"></xsl:value-of>",
	disabled: "<xsl:value-of select="$disabled"></xsl:value-of>",
	className: "<xsl:value-of select="$class"></xsl:value-of>",
	allowMultiSelect: <xsl:value-of select="boolean($multiple)"></xsl:value-of>,
	multiSelectListname: "<xsl:value-of select="$multiSelectListname"></xsl:value-of>",
	multiSelectCodeField: "<xsl:value-of select="$multiSelectCodeField"></xsl:value-of>",
	updateOnFieldChange: "<xsl:value-of select="$updateOnFieldChange"></xsl:value-of>",
	updateWamName: "<xsl:value-of select="$updateWamName"></xsl:value-of>",
	updateWrName: "<xsl:value-of select="$updateWrName"></xsl:value-of>",<xsl:text></xsl:text><xsl:if test="$updateFieldsToSubmit">
	updateFieldsToSubmit:<xsl:value-of select="$updateFieldsToSubmit" disable-output-escaping="yes"></xsl:value-of>,
</xsl:if>
	updateProtocol: "<xsl:value-of select="$updateProtocol"></xsl:value-of>",
	xmlColumnId: "<xsl:value-of select="descendant-or-self::lxml:column/@id"></xsl:value-of>",<xsl:text></xsl:text><xsl:choose><xsl:when test="$itemsSourceIsList">
	listname: "<xsl:value-of select="$items/@name"></xsl:value-of>",
	codeField: "<xsl:value-of select="$items/@value"></xsl:value-of>",
	captionField: "<xsl:value-of select="$items/@caption"></xsl:value-of>",
	selectorField: "<xsl:value-of select="$items/@selector"></xsl:value-of>",<xsl:text></xsl:text></xsl:when><xsl:otherwise>
	listname: "",
	codeField: "",
	captionField: "",
	selectorField: "",<xsl:text></xsl:text></xsl:otherwise></xsl:choose>
	list: <xsl:text></xsl:text><xsl:choose><xsl:when test="$itemsSourceIsXml"><xsl:text>Lstd.Json.factory(</xsl:text><xsl:choose><xsl:when test="$lweb_is_msxsl_nodeset"><xsl:call-template name="xml_to_json.private"><xsl:with-param name="list_xml" select="msxsl:node-set($list_xml)/*"></xsl:with-param><xsl:with-param name="listname" select="concat($name,'_xml')"></xsl:with-param></xsl:call-template></xsl:when><xsl:when test="$lweb_is_exslt_nodeset"><xsl:call-template name="xml_to_json.private"><xsl:with-param name="list_xml" select="exslt:node-set($list_xml)/*"></xsl:with-param><xsl:with-param name="listname" select="concat($name,'_xml')"></xsl:with-param></xsl:call-template></xsl:when></xsl:choose><xsl:text>)</xsl:text></xsl:when><xsl:otherwise><xsl:text>null</xsl:text></xsl:otherwise></xsl:choose><xsl:text></xsl:text>});
<xsl:text disable-output-escaping="yes">//]]&gt;</xsl:text></script></xsl:if></xsl:template><xsl:template name="xml_to_json.private"><xsl:param name="list_xml"></xsl:param><xsl:param name="listname"></xsl:param><xsl:text>{"list":{"</xsl:text><xsl:value-of select="$listname"></xsl:value-of><xsl:text>":{"header":[{name: "caption","lxml:heading-3": "Caption"}, </xsl:text><xsl:text>{name: "value","lxml:heading-3": "Value"}, </xsl:text><xsl:text>{name: "selector","lxml:heading-3": "Selector"}, </xsl:text><xsl:text>{name: "default","lxml:heading-3": "Default"}], entries: [ </xsl:text><xsl:for-each select="$list_xml/lxml:item"><xsl:text>["</xsl:text><xsl:value-of select="lxml:caption"></xsl:value-of><xsl:text>","</xsl:text><xsl:value-of select="lxml:value"></xsl:value-of><xsl:text>","</xsl:text><xsl:value-of select="@selector_value"></xsl:value-of><xsl:text>","</xsl:text><xsl:value-of select="@default"></xsl:value-of><xsl:text>"]</xsl:text><xsl:if test="position() != last()"><xsl:text>,</xsl:text></xsl:if></xsl:for-each><xsl:text>]}}}</xsl:text></xsl:template><xsl:template name="options_from_xml.private"><xsl:param name="list_xml"></xsl:param><xsl:for-each select="$list_xml/lxml:item"><xsl:element name="option"><xsl:attribute name="value"><xsl:value-of select="lxml:value"></xsl:value-of></xsl:attribute><xsl:choose><xsl:when test="lxml:caption != ''"><xsl:value-of select="lxml:caption"></xsl:value-of></xsl:when><xsl:otherwise><xsl:text disable-output-escaping="yes">&amp;nbsp;</xsl:text></xsl:otherwise></xsl:choose></xsl:element></xsl:for-each></xsl:template></xsl:transform>