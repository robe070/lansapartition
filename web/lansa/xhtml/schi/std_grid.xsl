<?xml version="1.0" encoding="UTF-8"?><!--(c) 2003, 2012 LANSA--><!--XHTML Standard Grid Control--><!--$Workfile:: std_grid.xsl $--><!--$UTCDate:: 2012-12-21 02:54:11Z $--><!--$Revision:: 20 $--><xsl:transform version="1.0" exclude-result-prefixes="lxml wd msxsl tsml" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:lxml="http://www.lansa.com/2002/XML/Runtime-Data" xmlns:wd="http://www.lansa.com/2002/XSL/Weblet-Design" xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:exslt="http://exslt.org/common" xmlns:tsml="http://www.lansa.com/2002/XML/Generation-Metadata" xmlns="http://www.w3.org/1999/xhtml"><xsl:import href="std_types.xsl"></xsl:import><xsl:import href="std_keys.xsl"></xsl:import><xsl:import href="std_char.xsl"></xsl:import><xsl:import href="std_boolean.xsl"></xsl:import><xsl:import href="std_date.xsl"></xsl:import><xsl:import href="std_float.xsl"></xsl:import><xsl:import href="std_integer.xsl"></xsl:import><xsl:import href="std_time.xsl"></xsl:import><xsl:import href="std_varchar.xsl"></xsl:import><xsl:import href="std_util.xsl"></xsl:import><xsl:output method="xml" omit-xml-declaration="yes" encoding="UTF-8" indent="yes"></xsl:output><lxml:data><lxml:list name=""><lxml:list-header><lxml:header name="COLUMN1"><lxml:heading-1>Heading 1</lxml:heading-1><lxml:heading-2></lxml:heading-2><lxml:heading-3></lxml:heading-3></lxml:header><lxml:header name="COLUMN2"><lxml:heading-1>Heading 2</lxml:heading-1><lxml:heading-2></lxml:heading-2><lxml:heading-3></lxml:heading-3></lxml:header><lxml:header name="COLUMN3"><lxml:heading-1>Heading 3</lxml:heading-1><lxml:heading-2></lxml:heading-2><lxml:heading-3></lxml:heading-3></lxml:header><lxml:header name="COLUMN4"><lxml:heading-1>Heading 4</lxml:heading-1><lxml:heading-2></lxml:heading-2><lxml:heading-3></lxml:heading-3></lxml:header><lxml:header name="COLUMN5"><lxml:heading-1>Heading 5</lxml:heading-1><lxml:heading-2></lxml:heading-2><lxml:heading-3></lxml:heading-3></lxml:header></lxml:list-header><lxml:list-entries><lxml:entry><lxml:column name="COLUMN1" id="SAMPLE_LIST.0001.COLUMN1">Value COLUMN1 1</lxml:column><lxml:column name="COLUMN2" id="SAMPLE_LIST.0001.COLUMN2">Value COLUMN2 1</lxml:column><lxml:column name="COLUMN3" id="SAMPLE_LIST.0001.COLUMN3">Value COLUMN3 1</lxml:column><lxml:column name="COLUMN4" id="SAMPLE_LIST.0001.COLUMN4">Value COLUMN4 1</lxml:column><lxml:column name="COLUMN5" id="SAMPLE_LIST.0001.COLUMN5">Value COLUMN5 1</lxml:column></lxml:entry><lxml:entry><lxml:column name="COLUMN1" id="SAMPLE_LIST.0002.COLUMN1">Value COLUMN1 2</lxml:column><lxml:column name="COLUMN2" id="SAMPLE_LIST.0002.COLUMN2">Value COLUMN2 2</lxml:column><lxml:column name="COLUMN3" id="SAMPLE_LIST.0002.COLUMN3">Value COLUMN3 2</lxml:column><lxml:column name="COLUMN4" id="SAMPLE_LIST.0002.COLUMN4">Value COLUMN4 2</lxml:column><lxml:column name="COLUMN5" id="SAMPLE_LIST.0002.COLUMN5">Value COLUMN5 2</lxml:column></lxml:entry><lxml:entry><lxml:column name="COLUMN1" id="SAMPLE_LIST.0003.COLUMN1">Value COLUMN1 3</lxml:column><lxml:column name="COLUMN2" id="SAMPLE_LIST.0003.COLUMN2">Value COLUMN2 3</lxml:column><lxml:column name="COLUMN3" id="SAMPLE_LIST.0003.COLUMN3">Value COLUMN3 3</lxml:column><lxml:column name="COLUMN4" id="SAMPLE_LIST.0003.COLUMN4">Value COLUMN4 3</lxml:column><lxml:column name="COLUMN5" id="SAMPLE_LIST.0003.COLUMN5">Value COLUMN5 3</lxml:column></lxml:entry><lxml:entry><lxml:column name="COLUMN1" id="SAMPLE_LIST.0004.COLUMN1">Value COLUMN1 4</lxml:column><lxml:column name="COLUMN2" id="SAMPLE_LIST.0004.COLUMN2">Value COLUMN2 4</lxml:column><lxml:column name="COLUMN3" id="SAMPLE_LIST.0004.COLUMN3">Value COLUMN3 4</lxml:column><lxml:column name="COLUMN4" id="SAMPLE_LIST.0004.COLUMN4">Value COLUMN4 4</lxml:column><lxml:column name="COLUMN5" id="SAMPLE_LIST.0004.COLUMN5">Value COLUMN5 4</lxml:column></lxml:entry><lxml:entry><lxml:column name="COLUMN1" id="SAMPLE_LIST.0005.COLUMN1">Value COLUMN1 5</lxml:column><lxml:column name="COLUMN2" id="SAMPLE_LIST.0005.COLUMN2">Value COLUMN2 5</lxml:column><lxml:column name="COLUMN3" id="SAMPLE_LIST.0005.COLUMN3">Value COLUMN3 5</lxml:column><lxml:column name="COLUMN4" id="SAMPLE_LIST.0005.COLUMN4">Value COLUMN4 5</lxml:column><lxml:column name="COLUMN5" id="SAMPLE_LIST.0005.COLUMN5">Value COLUMN5 5</lxml:column></lxml:entry></lxml:list-entries></lxml:list><lxml:grid id="std_grid" is_container="false"><lxml:item name="COLUMN1"><lxml:properties><lxml:param name="name" modifier="@id" preferred_child_total="1"></lxml:param><lxml:param name="value" modifier="." preferred_child_total="1"></lxml:param><lxml:param role="std:display_mode" modifier="$tsml_col_mode" preferred_child_total="1"></lxml:param><lxml:param role="std:field_maxlength" modifier="$tsml_col_max_len" preferred_child_total="1"></lxml:param><lxml:param role="std:field_display_length" modifier="$tsml_col_display_len" preferred_child_total="1"></lxml:param><lxml:param role="std:field_input_type" modifier="$tsml_col_input_type" preferred_child_total="1"></lxml:param><lxml:param role="std:field_css_class" modifier="$tsml_col_css_class" preferred_child_total="1"></lxml:param></lxml:properties><lxml:caption>Column</lxml:caption><lxml:value>Column</lxml:value></lxml:item><lxml:item name="COLUMN2"><lxml:properties><lxml:param name="name" modifier="@id" preferred_child_total="1"></lxml:param><lxml:param name="value" modifier="." preferred_child_total="1"></lxml:param></lxml:properties><lxml:caption>Column</lxml:caption><lxml:value>Column</lxml:value></lxml:item><lxml:item name="COLUMN3" custom="true"><lxml:properties><lxml:param name="name" modifier="@id" preferred_child_total="1"></lxml:param><lxml:param name="value" modifier="." preferred_child_total="1"></lxml:param></lxml:properties><lxml:caption>Column</lxml:caption><lxml:value>Column</lxml:value></lxml:item><lxml:item name="COLUMN4"><lxml:properties><lxml:param name="name" modifier="@id" preferred_child_total="1"></lxml:param><lxml:param name="value" modifier="." preferred_child_total="1"></lxml:param></lxml:properties><lxml:caption>Column</lxml:caption><lxml:value>Column</lxml:value></lxml:item><lxml:item name="COLUMN5"><lxml:properties><lxml:param name="name" modifier="@id" preferred_child_total="1"></lxml:param><lxml:param name="value" modifier="." preferred_child_total="1"></lxml:param></lxml:properties><lxml:caption>Column</lxml:caption><lxml:value>Column</lxml:value></lxml:item></lxml:grid><lxml:grid id="std_grid_header" is_container="false"><lxml:item name="COLUMN1"><lxml:properties><lxml:param name="value" modifier="." preferred_child_total="1"></lxml:param></lxml:properties><lxml:caption>Header</lxml:caption></lxml:item><lxml:item name="COLUMN2"><lxml:properties><lxml:param name="value" modifier="." preferred_child_total="1"></lxml:param></lxml:properties><lxml:caption>Header</lxml:caption></lxml:item><lxml:item name="COLUMN3"><lxml:properties><lxml:param name="value" modifier="." preferred_child_total="1"></lxml:param></lxml:properties><lxml:caption>Header</lxml:caption></lxml:item><lxml:item name="COLUMN4"><lxml:properties><lxml:param name="value" modifier="." preferred_child_total="1"></lxml:param></lxml:properties><lxml:caption>Header</lxml:caption></lxml:item><lxml:item name="COLUMN5"><lxml:properties><lxml:param name="value" modifier="." preferred_child_total="1"></lxml:param></lxml:properties><lxml:caption>Header</lxml:caption></lxml:item></lxml:grid></lxml:data><xsl:template name="std_grid"><xsl:param name="name"></xsl:param><xsl:param name="listname"></xsl:param><xsl:param name="listname_fixed_col_field"></xsl:param><xsl:param name="sort_fixed_rows_with_body" select="true()"></xsl:param><xsl:param name="or_list_xml"><xsl:if test="$listname = '' or not(/lxml:data/lxml:lists/lxml:list[@name=$listname])"><xsl:copy-of select="document('')/*/lxml:data/lxml:list"></xsl:copy-of></xsl:if></xsl:param><xsl:param name="grid_hdr_properties" select="document('')/*/lxml:data/lxml:grid[@id='std_grid_header']"></xsl:param><xsl:param name="grid_col_properties" select="document('')/*/lxml:data/lxml:grid[@id='std_grid']"></xsl:param><xsl:param name="show_header" select="true()"></xsl:param><xsl:param name="hide_header_if_empty" select="true()"></xsl:param><xsl:param name="hide_if" select="false()"></xsl:param><xsl:param name="header_class" select="'std_grid_head'"></xsl:param><xsl:param name="outline_class" select="'std_grid_outline'"></xsl:param><xsl:param name="border_style"></xsl:param><xsl:param name="border_width"></xsl:param><xsl:param name="even_row_class" select="'std_grid_even_row'"></xsl:param><xsl:param name="odd_row_class" select="'std_grid_odd_row'"></xsl:param><xsl:param name="cell_class" select="'std_grid_cell'"></xsl:param><xsl:param name="formname" select="'LANSA'"></xsl:param><xsl:param name="pos_absolute" select="'left:0pt;top:0pt'"></xsl:param><xsl:param name="width"></xsl:param><xsl:param name="height"></xsl:param><xsl:if test="not($hide_if) or $lweb_design_mode"><xsl:choose><xsl:when test="$lweb_is_msxsl_nodeset"><xsl:call-template name="std_grid.private"><xsl:with-param name="show_header" select="$show_header"></xsl:with-param><xsl:with-param name="hide_header_if_empty" select="$hide_header_if_empty"></xsl:with-param><xsl:with-param name="grid_hdr_properties" select="$grid_hdr_properties"></xsl:with-param><xsl:with-param name="grid_col_properties" select="$grid_col_properties"></xsl:with-param><xsl:with-param name="formname" select="$formname"></xsl:with-param><xsl:with-param name="width" select="$width"></xsl:with-param><xsl:with-param name="height" select="$height"></xsl:with-param><xsl:with-param name="pos_absolute" select="$pos_absolute"></xsl:with-param><xsl:with-param name="odd_row_class" select="$odd_row_class"></xsl:with-param><xsl:with-param name="even_row_class" select="$even_row_class"></xsl:with-param><xsl:with-param name="cell_class" select="$cell_class"></xsl:with-param><xsl:with-param name="border_width" select="$border_width"></xsl:with-param><xsl:with-param name="border_style" select="$border_style"></xsl:with-param><xsl:with-param name="outline_class" select="$outline_class"></xsl:with-param><xsl:with-param name="header_class" select="$header_class"></xsl:with-param><xsl:with-param name="listname" select="$listname"></xsl:with-param><xsl:with-param name="listname_fixed_col_field" select="$listname_fixed_col_field"></xsl:with-param><xsl:with-param name="sort_fixed_rows_with_body" select="$sort_fixed_rows_with_body"></xsl:with-param><xsl:with-param name="name" select="$name"></xsl:with-param><xsl:with-param name="items_xml" select="msxsl:node-set($or_list_xml)/lxml:list | /lxml:data/lxml:lists/lxml:list[@name=$listname][$listname!='']"></xsl:with-param></xsl:call-template></xsl:when><xsl:when test="$lweb_is_exslt_nodeset"><xsl:call-template name="std_grid.private"><xsl:with-param name="show_header" select="$show_header"></xsl:with-param><xsl:with-param name="hide_header_if_empty" select="$hide_header_if_empty"></xsl:with-param><xsl:with-param name="grid_hdr_properties" select="$grid_hdr_properties"></xsl:with-param><xsl:with-param name="grid_col_properties" select="$grid_col_properties"></xsl:with-param><xsl:with-param name="formname" select="$formname"></xsl:with-param><xsl:with-param name="width" select="$width"></xsl:with-param><xsl:with-param name="height" select="$height"></xsl:with-param><xsl:with-param name="pos_absolute" select="$pos_absolute"></xsl:with-param><xsl:with-param name="odd_row_class" select="$odd_row_class"></xsl:with-param><xsl:with-param name="even_row_class" select="$even_row_class"></xsl:with-param><xsl:with-param name="cell_class" select="$cell_class"></xsl:with-param><xsl:with-param name="border_width" select="$border_width"></xsl:with-param><xsl:with-param name="border_style" select="$border_style"></xsl:with-param><xsl:with-param name="outline_class" select="$outline_class"></xsl:with-param><xsl:with-param name="header_class" select="$header_class"></xsl:with-param><xsl:with-param name="listname" select="$listname"></xsl:with-param><xsl:with-param name="listname_fixed_col_field" select="$listname_fixed_col_field"></xsl:with-param><xsl:with-param name="sort_fixed_rows_with_body" select="$sort_fixed_rows_with_body"></xsl:with-param><xsl:with-param name="name" select="$name"></xsl:with-param><xsl:with-param name="items_xml" select="exslt:node-set($or_list_xml)/lxml:list | /lxml:data/lxml:lists/lxml:list[@name=$listname][$listname!='']"></xsl:with-param></xsl:call-template></xsl:when></xsl:choose></xsl:if></xsl:template><xsl:template name="std_grid.private"><xsl:param name="name"></xsl:param><xsl:param name="listname"></xsl:param><xsl:param name="listname_fixed_col_field"></xsl:param><xsl:param name="sort_fixed_rows_with_body"></xsl:param><xsl:param name="items_xml"></xsl:param><xsl:param name="show_header"></xsl:param><xsl:param name="hide_header_if_empty"></xsl:param><xsl:param name="grid_hdr_properties"></xsl:param><xsl:param name="grid_col_properties"></xsl:param><xsl:param name="header_class"></xsl:param><xsl:param name="outline_class"></xsl:param><xsl:param name="border_style"></xsl:param><xsl:param name="border_width"></xsl:param><xsl:param name="even_row_class"></xsl:param><xsl:param name="odd_row_class"></xsl:param><xsl:param name="cell_class"></xsl:param><xsl:param name="formname"></xsl:param><xsl:param name="pos_absolute"></xsl:param><xsl:param name="width"></xsl:param><xsl:param name="height"></xsl:param><xsl:variable name="unique_prefix"><xsl:value-of select="$formname"></xsl:value-of><xsl:text>_</xsl:text><xsl:value-of select="$name"></xsl:value-of></xsl:variable><xsl:variable name="header_visible" select="$show_header and (not($hide_header_if_empty) or boolean($items_xml/lxml:list-entries/lxml:entry[1]))"></xsl:variable><xsl:variable name="head_col_div_div_name" select="concat($unique_prefix, '_head_col_td')"></xsl:variable><xsl:variable name="head_col_div_name" select="concat($unique_prefix, '_head_col_div')"></xsl:variable><xsl:variable name="head_col_tbl_name" select="concat($unique_prefix, '_head_col_tbl')"></xsl:variable><xsl:variable name="head_div_name" select="concat($unique_prefix, '_head_div')"></xsl:variable><xsl:variable name="head_tbl_name" select="concat($unique_prefix, '_head_tbl')"></xsl:variable><xsl:variable name="body_div_name" select="concat($unique_prefix, '_body_div')"></xsl:variable><xsl:variable name="body_tbl_name" select="concat($unique_prefix, '_body_tbl')"></xsl:variable><xsl:variable name="fixed_col_entries" select="$items_xml/lxml:list-entries/lxml:entry/lxml:column[@name=$listname_fixed_col_field]"></xsl:variable><xsl:variable name="tsml_list_node" select="$lweb_data_node/tsml:data[@used_by = 'LANSA_XHTML']/tsml:lists/tsml:list[@name = $listname]"></xsl:variable><xsl:if test="not($lweb_design_mode)"><script type="text/javascript"><xsl:text disable-output-escaping="yes">//&lt;![CDATA[
				</xsl:text>
var g_<xsl:value-of select="$unique_prefix"></xsl:value-of>_sortColIndex = -1;
function <xsl:value-of select="$unique_prefix"></xsl:value-of>_sortDesc(left, right)
{
	return <xsl:value-of select="$unique_prefix"></xsl:value-of>_sortAsc(right, left);
}
function <xsl:value-of select="$unique_prefix"></xsl:value-of>_sortAsc(left, right)
{
	var lhs;
	var rhs;
	<xsl:variable name="sort_col_index" select="concat('g_', $unique_prefix, '_sortColIndex')"></xsl:variable>
	switch (<xsl:value-of select="$sort_col_index"></xsl:value-of>)
	{<xsl:text></xsl:text><xsl:for-each select="$tsml_list_node/tsml:list-entries/tsml:entry/tsml:column">
		case <xsl:value-of select="position() - 1"></xsl:value-of>:<xsl:text></xsl:text><xsl:choose><xsl:when test="(tsml:format/tsml:type = 'packed') or (tsml:format/tsml:type = 'signed')"><xsl:choose><xsl:when test="tsml:format/tsml:decimal-separator = ','">
			lhs = left.commaRegExp.parseDecimal(left.itemCol[<xsl:value-of select="$sort_col_index"></xsl:value-of>]);
			rhs = right.commaRegExp.parseDecimal(right.itemCol[<xsl:value-of select="$sort_col_index"></xsl:value-of>]);<xsl:text></xsl:text></xsl:when><xsl:otherwise>
			lhs = left.periodRegExp.parseDecimal(left.itemCol[<xsl:value-of select="$sort_col_index"></xsl:value-of>]);
			rhs = right.periodRegExp.parseDecimal(right.itemCol[<xsl:value-of select="$sort_col_index"></xsl:value-of>]);<xsl:text></xsl:text></xsl:otherwise></xsl:choose></xsl:when><xsl:when test="tsml:format/tsml:type = 'integer'">
			lhs = left.nanRegExp.parseInt(left.itemCol[<xsl:value-of select="$sort_col_index"></xsl:value-of>]);
			rhs = right.nanRegExp.parseInt(right.itemCol[<xsl:value-of select="$sort_col_index"></xsl:value-of>]);<xsl:text></xsl:text></xsl:when><xsl:when test="tsml:format/tsml:type = 'float'">
			lhs = left.floatRegExp.parseFloat(left.itemCol[<xsl:value-of select="$sort_col_index"></xsl:value-of>]);
			rhs = right.floatRegExp.parseFloat(right.itemCol[<xsl:value-of select="$sort_col_index"></xsl:value-of>]);<xsl:text></xsl:text></xsl:when><xsl:otherwise>
			lhs = left.itemCol[<xsl:value-of select="$sort_col_index"></xsl:value-of>];
			rhs = right.itemCol[<xsl:value-of select="$sort_col_index"></xsl:value-of>];<xsl:text></xsl:text></xsl:otherwise></xsl:choose>
			break;<xsl:text></xsl:text></xsl:for-each>
	}
	<xsl:text disable-output-escaping="yes">return lhs &lt; rhs ? -1 : lhs &gt; rhs ? 1 : 0;</xsl:text>
}
function <xsl:value-of select="$unique_prefix"></xsl:value-of>_ArrObject(pos<xsl:text></xsl:text><xsl:for-each select="$items_xml/lxml:list-header/lxml:header[@name!=$listname_fixed_col_field]"><xsl:text>,val</xsl:text><xsl:value-of select="position()"></xsl:value-of></xsl:for-each><xsl:text>)</xsl:text>
{
<xsl:text>this.itemCol = new Array(</xsl:text><xsl:for-each select="$items_xml/lxml:list-header/lxml:header[@name!=$listname_fixed_col_field]"><xsl:text>val</xsl:text><xsl:value-of select="position()"></xsl:value-of><xsl:if test="position() != last()">,</xsl:if></xsl:for-each><xsl:text>);
this.itemRowIndex = pos;</xsl:text><xsl:if test="$tsml_list_node/tsml:list-entries/tsml:entry/tsml:column/tsml:format/tsml:decimal-separator[text() = '.']">
this.periodRegExp = new StdNumberParser('.');</xsl:if><xsl:if test="$tsml_list_node/tsml:list-entries/tsml:entry/tsml:column/tsml:format/tsml:decimal-separator[text() = ',']">
this.commaRegExp = new StdNumberParser(',');</xsl:if><xsl:if test="$tsml_list_node/tsml:list-entries/tsml:entry/tsml:column/tsml:format[not(tsml:decimal-separator)]">
this.nanRegExp = new StdNumberParser('');</xsl:if><xsl:if test="$tsml_list_node/tsml:list-entries/tsml:entry/tsml:column/tsml:format/tsml:type[text() = 'float']">
this.floatRegExp = new StdNumberParser('e');</xsl:if>
}
var <xsl:value-of select="$unique_prefix"></xsl:value-of>_itemArray = new Array(<xsl:text></xsl:text><xsl:for-each select="$items_xml/lxml:list-entries/lxml:entry"><xsl:text>new </xsl:text><xsl:value-of select="$unique_prefix"></xsl:value-of><xsl:text>_ArrObject(</xsl:text><xsl:value-of select="position() -1"></xsl:value-of><xsl:for-each select="lxml:column[@name!=$listname_fixed_col_field]"><xsl:text>,"</xsl:text><xsl:choose><xsl:when test="contains(., '\') or contains(., '&quot;')"><xsl:call-template name="JSEncode.private"><xsl:with-param name="theStr" select="."></xsl:with-param></xsl:call-template></xsl:when><xsl:otherwise><xsl:value-of select="."></xsl:value-of></xsl:otherwise></xsl:choose><xsl:text>"</xsl:text></xsl:for-each><xsl:text>)</xsl:text><xsl:if test="position() != last()"><xsl:text>,</xsl:text></xsl:if></xsl:for-each><xsl:text>);</xsl:text>
function <xsl:value-of select="$unique_prefix"></xsl:value-of>_onClick(oCell, arr, colNum)
{
if( <xsl:value-of select="$unique_prefix"></xsl:value-of>_isInResizeCapture(oCell) )
{ return; }
g_<xsl:value-of select="$unique_prefix"></xsl:value-of>_sortColIndex = colNum;
stdGridSortColumn(oCell, arr, "<xsl:value-of select="$name"></xsl:value-of>_sb", "<xsl:value-of select="$name"></xsl:value-of>_body", <xsl:value-of select="$unique_prefix"></xsl:value-of>_sortAsc, <xsl:value-of select="$unique_prefix"></xsl:value-of>_sortDesc, <xsl:choose><xsl:when test="$sort_fixed_rows_with_body">true</xsl:when><xsl:otherwise>false</xsl:otherwise></xsl:choose>, "<xsl:value-of select="$head_col_tbl_name"></xsl:value-of>", "<xsl:value-of select="$even_row_class"></xsl:value-of>", "<xsl:value-of select="$odd_row_class"></xsl:value-of>");
g_<xsl:value-of select="$unique_prefix"></xsl:value-of>_sortColIndex = -1;
}
<xsl:for-each select="$items_xml/lxml:list-header/lxml:header[@name!=$listname_fixed_col_field]">function <xsl:value-of select="$unique_prefix"></xsl:value-of>_<xsl:value-of select="position()"></xsl:value-of>_onCellClick(oCell, arr, colNum, rowIndex, oInput)
{
	<xsl:if test="$lweb_data_node/tsml:data/tsml:lists/tsml:list[@name=$listname]/tsml:list-entries/tsml:entry/tsml:column[@name=current()/@name]/tsml:mode!='output'"><xsl:text></xsl:text>
oInput.style.backgroundColor = "";
oCell.style.borderStyle = "inset";
oInput.select();</xsl:if>
}
function <xsl:value-of select="$unique_prefix"></xsl:value-of>_<xsl:value-of select="position()"></xsl:value-of>_onCellBlur(oCell, arr, colNum, rowIndex, oInput)
{
	<xsl:if test="$lweb_data_node/tsml:data/tsml:lists/tsml:list[@name=$listname]/tsml:list-entries/tsml:entry/tsml:column[@name=current()/@name]/tsml:mode!='output'"><xsl:text></xsl:text>
oCell.style.borderStyle = "";
	arr[arr[rowIndex].itemRowIndex].itemCol[colNum] = oInput.value;
	oInput.style.backgroundColor = "transparent";</xsl:if>
}</xsl:for-each>
var g<xsl:value-of select="$name"></xsl:value-of>_isResized = false;
function <xsl:value-of select="$unique_prefix"></xsl:value-of>_onresize()
{
if( !g<xsl:value-of select="$name"></xsl:value-of>_isResized )
{
g<xsl:value-of select="$name"></xsl:value-of>_isResized = true;
<xsl:value-of select="$unique_prefix"></xsl:value-of>_sizeTables(); }
}
function <xsl:value-of select="$unique_prefix"></xsl:value-of>_sizeTables(oEventObj, bDontAdjustBody)
{ var oDiv = stdGetFromDocumentByNameOrId(document, "<xsl:value-of select="$name"></xsl:value-of>");
if( oDiv!=null )
{
<xsl:text disable-output-escaping="yes"> if( oDiv.offsetHeight &gt; 0 ) </xsl:text>
{
g<xsl:value-of select="$name"></xsl:value-of>_isResized = true;
stdGridSizeTables("<xsl:value-of select="$head_div_name"></xsl:value-of>",
"<xsl:value-of select="$head_tbl_name"></xsl:value-of>",
"<xsl:value-of select="$body_div_name"></xsl:value-of>",
"<xsl:value-of select="$body_tbl_name"></xsl:value-of>",
"<xsl:value-of select="$head_col_div_name"></xsl:value-of>",
"<xsl:value-of select="$head_col_div_div_name"></xsl:value-of>",
"<xsl:value-of select="$head_col_tbl_name"></xsl:value-of>",
"<xsl:value-of select="$name"></xsl:value-of>", <xsl:choose><xsl:when test="not($width) or ($width='0pt')">true</xsl:when><xsl:otherwise>false</xsl:otherwise></xsl:choose>, bDontAdjustBody);
}
else
{
	stdDhtmlAttachHandler(oDiv.offsetParent, "resize", <xsl:value-of select="$unique_prefix"></xsl:value-of>_onresize);
}
}
}
function <xsl:value-of select="$unique_prefix"></xsl:value-of>_isInResizeCapture(oHeadCell)
{
	var oHeadTable = stdGetFromDocumentByNameOrId(document, "<xsl:value-of select="$head_tbl_name"></xsl:value-of>");
	<xsl:text disable-output-escaping="yes">return (oHeadTable!=null &amp;&amp; oHeadTable.getAttribute("__is_in_resize")!=null);</xsl:text>
}
stdDhtmlHideShowInitHandler(<xsl:value-of select="$unique_prefix"></xsl:value-of>_sizeTables);
				<xsl:text disable-output-escaping="yes">//]]&gt;</xsl:text></script></xsl:if><xsl:variable name="list_tsml" select="$lweb_data_node/tsml:data/tsml:lists/tsml:list[@name=$listname]"></xsl:variable><div class="{$outline_class}" id="{$name}" onresize="{$unique_prefix}_onresize()"><xsl:attribute name="style"><xsl:call-template name="make_size_and_pos_style.private"><xsl:with-param name="in_attribute" select="false()"></xsl:with-param><xsl:with-param name="caller_name" select="'std_grid.xsl'"></xsl:with-param><xsl:with-param name="pos_absolute" select="$pos_absolute"></xsl:with-param><xsl:with-param name="width" select="$width"></xsl:with-param></xsl:call-template><xsl:text>;overflow:hidden;display:inline</xsl:text><xsl:if test="$border_style!=''"><xsl:text>;border-style:</xsl:text><xsl:value-of select="$border_style"></xsl:value-of></xsl:if><xsl:if test="$border_width!=''"><xsl:text>;border-width:</xsl:text><xsl:value-of select="$border_width"></xsl:value-of></xsl:if></xsl:attribute><table style="display: inline;" cellspacing="0" cellpadding="0"><tbody><xsl:if test="$header_visible"><tr><xsl:if test="not($lweb_design_mode) and boolean($fixed_col_entries)"><td class="{$header_class}"><span style="width:100%"><xsl:comment></xsl:comment><xsl:comment /></span></td></xsl:if><td><xsl:if test="not($lweb_design_mode)"><div style="width:100%;overflow:hidden"><div id="{$head_div_name}" style="width:0px;display:inline;position:relative;" nowrap="-1"><table id="{$head_tbl_name}" style="display: inline" cellspacing="0" cellpadding="0"><thead><tr><xsl:for-each select="$items_xml/lxml:list-header/lxml:header"><xsl:variable name="column_tsml" select="$list_tsml/tsml:list-entries/tsml:entry/tsml:column[@name=current()/@name]"></xsl:variable><xsl:if test="@name!=$listname_fixed_col_field"><xsl:variable name="fixed_col_offset" select="count(./preceding-sibling::*) - count(./preceding-sibling::*[@name!=$listname_fixed_col_field])"></xsl:variable><th class="{$header_class}" onclick="{$unique_prefix}_onClick(this, {$unique_prefix}_itemArray, {position() -1 -$fixed_col_offset});" onmousemove="stdGridOnHeaderMouseMove(event, this);" onmousedown="stdGridOnHeaderMouseDown(event, this, '{$head_tbl_name}', '{$name}_body')" onmouseup="stdGridOnHeaderMouseUp(event, this, {$unique_prefix}_sizeTables)" nowrap="-1"><xsl:if test="not($lweb_design_mode) and $column_tsml/tsml:mode='hidden'"><xsl:attribute name="class">hidden</xsl:attribute></xsl:if><xsl:variable name="col_pos" select="position()"></xsl:variable><xsl:variable name="grid_hdr_prop" select="$grid_hdr_properties[@name=$listname]/lxml:item[$col_pos][current()/@name=@name]"></xsl:variable><xsl:if test="$grid_hdr_prop/@no_sort='true'"><xsl:attribute name="onclick"></xsl:attribute></xsl:if><xsl:choose><xsl:when test="$grid_hdr_properties/@name=$listname and @name=$grid_hdr_properties/lxml:item[$col_pos]/@name and $grid_hdr_properties/lxml:item[$col_pos]/@custom='true'"><xsl:variable name="column_format" select="$column_tsml/tsml:format"></xsl:variable><xsl:variable name="tsml_type" select="$column_format/tsml:type"></xsl:variable><xsl:variable name="input_class"><xsl:choose><xsl:when test="$tsml_type='packed' or $tsml_type='signed' or $tsml_type='float' or $tsml_type='integer'"><xsl:text>number</xsl:text></xsl:when><xsl:otherwise><xsl:choose><xsl:when test="$column_format/tsml:input-case='uppercase'"><xsl:text>utext</xsl:text></xsl:when><xsl:otherwise><xsl:text>text</xsl:text></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose></xsl:variable><xsl:apply-templates select="$grid_hdr_properties/lxml:item[$col_pos]" mode="std_grid.private.override"><xsl:with-param name="context" select="."></xsl:with-param><xsl:with-param name="index" select="position()"></xsl:with-param><xsl:with-param name="tsml_col" select="$column_tsml"></xsl:with-param><xsl:with-param name="tsml_col_mode" select="$column_tsml/tsml:mode"></xsl:with-param><xsl:with-param name="tsml_col_max_len" select="$column_format/tsml:max-length"></xsl:with-param><xsl:with-param name="tsml_col_display_len" select="$column_format/tsml:display-max-length"></xsl:with-param><xsl:with-param name="tsml_col_input_type"><xsl:if test="$column_format/tsml:non-display='true'"><xsl:text>password</xsl:text></xsl:if></xsl:with-param><xsl:with-param name="tsml_col_css_class" select="$input_class"></xsl:with-param><xsl:with-param name="headers" select="../lxml:header"></xsl:with-param><xsl:with-param name="columns" select="$items_xml/lxml:list-entries/lxml:entry"></xsl:with-param></xsl:apply-templates></xsl:when><xsl:otherwise><xsl:for-each select="*"><xsl:value-of select="."></xsl:value-of><xsl:if test=". != '' and position() != last() and ./following-sibling::* != ''"><br /></xsl:if></xsl:for-each></xsl:otherwise></xsl:choose><span class="std_grid_sort_box" id="{$name}_sb" style="visibility:hidden">6</span></th></xsl:if></xsl:for-each></tr></thead><tbody></tbody></table></div></div></xsl:if><xsl:comment /></td></tr></xsl:if><tr><xsl:if test="not($lweb_design_mode) and boolean($fixed_col_entries)"><td valign="top"><div id="{$head_col_div_div_name}" nowrap="-1"><xsl:attribute name="style"><xsl:call-template name="make_size_style.private"><xsl:with-param name="in_attribute" select="false()"></xsl:with-param><xsl:with-param name="caller_name" select="'std_grid.xsl'"></xsl:with-param><xsl:with-param name="height" select="$height"></xsl:with-param></xsl:call-template><xsl:text>;overflow-y:hidden</xsl:text></xsl:attribute><div id="{$head_col_div_name}" nowrap="-1"><xsl:attribute name="style"><xsl:text>;display:inline;position:relative</xsl:text></xsl:attribute><table id="{$head_col_tbl_name}" style="display:inline" cellspacing="0" cellpadding="0"><thead><xsl:for-each select="$fixed_col_entries"><xsl:variable name="col_pos" select="count(./preceding-sibling::*) +1"></xsl:variable><xsl:variable name="column_tsml" select="$list_tsml/tsml:list-entries/tsml:entry/tsml:column[@name=current()/@name]"></xsl:variable><xsl:variable name="column_format" select="$column_tsml/tsml:format"></xsl:variable><xsl:variable name="tsml_type" select="$column_format/tsml:type"></xsl:variable><xsl:variable name="input_class"><xsl:choose><xsl:when test="$tsml_type='packed' or $tsml_type='signed' or $tsml_type='float' or $tsml_type='integer'"><xsl:text>number</xsl:text></xsl:when><xsl:otherwise><xsl:choose><xsl:when test="$column_format/tsml:input-case='uppercase'"><xsl:text>utext</xsl:text></xsl:when><xsl:otherwise><xsl:text>text</xsl:text></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose></xsl:variable><tr><th class="{$header_class}" nowrap="-1"><xsl:choose><xsl:when test="$grid_col_properties/@name=$listname and @name=$grid_col_properties/lxml:item[$col_pos]/@name and $grid_col_properties/lxml:item[$col_pos]/@custom='true'"><xsl:apply-templates select="$grid_col_properties/lxml:item[$col_pos]" mode="std_grid.private.override"><xsl:with-param name="context" select="."></xsl:with-param><xsl:with-param name="index" select="$col_pos"></xsl:with-param><xsl:with-param name="tsml_col" select="$column_tsml"></xsl:with-param><xsl:with-param name="tsml_col_mode" select="$column_tsml/tsml:mode"></xsl:with-param><xsl:with-param name="tsml_col_max_len" select="$column_format/tsml:max-length"></xsl:with-param><xsl:with-param name="tsml_col_display_len" select="$column_format/tsml:display-max-length"></xsl:with-param><xsl:with-param name="tsml_col_input_type"><xsl:if test="$column_format/tsml:non-display='true'"><xsl:text>password</xsl:text></xsl:if></xsl:with-param><xsl:with-param name="tsml_col_css_class" select="$input_class"></xsl:with-param><xsl:with-param name="cells" select=".."></xsl:with-param></xsl:apply-templates></xsl:when><xsl:otherwise><xsl:value-of select="."></xsl:value-of><xsl:if test="$lweb_data_node/tsml:data/tsml:lists/tsml:list[@name=$listname]/tsml:list-entries/tsml:entry/tsml:column[@name=current()/@name]/tsml:mode!='output'"><input type="hidden" name="{@id}" value="{.}" /></xsl:if></xsl:otherwise></xsl:choose><xsl:comment /></th></tr></xsl:for-each></thead><tbody></tbody></table></div></div></td></xsl:if><td valign="top"><div id="{$body_div_name}" onscroll="stdGridOnScroll(this, '{$head_div_name}', '{$head_col_div_name}');" nowrap="-1"><xsl:attribute name="style"><xsl:call-template name="make_size_style.private"><xsl:with-param name="in_attribute" select="false()"></xsl:with-param><xsl:with-param name="caller_name" select="'std_grid.xsl'"></xsl:with-param><xsl:with-param name="height" select="$height"></xsl:with-param><xsl:with-param name="width" select="$width"></xsl:with-param></xsl:call-template><xsl:text>;display:inline;overflow:auto</xsl:text></xsl:attribute><xsl:if test="not($lweb_design_mode)"><input type="hidden" name="{$items_xml/@name}.." value="{count($items_xml/lxml:list-entries/lxml:entry[1])}" /></xsl:if><table id="{$body_tbl_name}" style="display: inline;" cellspacing="0" cellpadding="0"><xsl:if test="$header_visible and $lweb_design_mode"><thead><tr><xsl:if test="$lweb_design_mode and boolean($fixed_col_entries)"><th class="{$header_class}" nowrap="-1"><span style="width:100%"><xsl:comment></xsl:comment><xsl:comment /></span></th></xsl:if><xsl:for-each select="$items_xml/lxml:list-header/lxml:header"><xsl:variable name="column_tsml" select="$list_tsml/tsml:list-entries/tsml:entry/tsml:column[@name=current()/@name]"></xsl:variable><xsl:if test="@name!=$listname_fixed_col_field"><th class="{$header_class}" onclick="{$unique_prefix}_onClick(this, {$unique_prefix}_itemArray, {position()-1} );" nowrap="-1"><xsl:if test="not($lweb_design_mode) and $column_tsml/tsml:mode='hidden'"><xsl:attribute name="class">hidden</xsl:attribute></xsl:if><xsl:variable name="col_pos" select="position()"></xsl:variable><xsl:choose><xsl:when test="$grid_hdr_properties/@name=$listname and @name=$grid_hdr_properties/lxml:item[$col_pos]/@name and $grid_hdr_properties/lxml:item[$col_pos]/@custom='true'"><xsl:variable name="column_format" select="$column_tsml/tsml:format"></xsl:variable><xsl:variable name="tsml_type" select="$column_format/tsml:type"></xsl:variable><xsl:variable name="input_class"><xsl:choose><xsl:when test="$tsml_type='packed' or $tsml_type='signed' or $tsml_type='float' or $tsml_type='integer'"><xsl:text>number</xsl:text></xsl:when><xsl:otherwise><xsl:choose><xsl:when test="$column_format/tsml:input-case='uppercase'"><xsl:text>utext</xsl:text></xsl:when><xsl:otherwise><xsl:text>text</xsl:text></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose></xsl:variable><xsl:apply-templates select="$grid_hdr_properties/lxml:item[$col_pos]" mode="std_grid.private.override"><xsl:with-param name="context" select="."></xsl:with-param><xsl:with-param name="index" select="position()"></xsl:with-param><xsl:with-param name="tsml_col" select="$column_tsml"></xsl:with-param><xsl:with-param name="tsml_col_mode" select="$column_tsml/tsml:mode"></xsl:with-param><xsl:with-param name="tsml_col_max_len" select="$column_format/tsml:max-length"></xsl:with-param><xsl:with-param name="tsml_col_display_len" select="$column_format/tsml:display-max-length"></xsl:with-param><xsl:with-param name="tsml_col_input_type"><xsl:if test="$column_format/tsml:non-display='true'"><xsl:text>password</xsl:text></xsl:if></xsl:with-param><xsl:with-param name="tsml_col_css_class" select="$input_class"></xsl:with-param><xsl:with-param name="headers" select="../lxml:header"></xsl:with-param><xsl:with-param name="columns" select="$items_xml/lxml:list-entries/lxml:entry"></xsl:with-param></xsl:apply-templates></xsl:when><xsl:otherwise><xsl:for-each select="*"><xsl:value-of select="."></xsl:value-of><xsl:if test=". != '' and position() != last() and ./following-sibling::* != ''"><br /></xsl:if></xsl:for-each></xsl:otherwise></xsl:choose><span class="std_grid_sort_box" id="{$name}_sb" style="visibility:hidden">6</span></th></xsl:if></xsl:for-each></tr></thead></xsl:if><tbody id="{$name}_body"><xsl:for-each select="$items_xml/lxml:list-entries/lxml:entry"><xsl:variable name="row_class"><xsl:choose><xsl:when test="position() mod 2 = 0"><xsl:value-of select="$even_row_class"></xsl:value-of></xsl:when><xsl:otherwise><xsl:value-of select="$odd_row_class"></xsl:value-of></xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="row_pos" select="position()"></xsl:variable><tr><xsl:if test="not($lweb_design_mode)"><xsl:attribute name="class"><xsl:value-of select="$row_class"></xsl:value-of></xsl:attribute></xsl:if><xsl:if test="$lweb_design_mode and boolean($fixed_col_entries)"><th class="{$header_class}" nowrap="-1"><xsl:variable name="col_pos" select="count($fixed_col_entries[$row_pos]/preceding-sibling::*) +1"></xsl:variable><xsl:choose><xsl:when test="$grid_col_properties/@name=$listname and $fixed_col_entries[$row_pos]/@name=$grid_col_properties/lxml:item[$col_pos]/@name and $grid_col_properties/lxml:item[$col_pos]/@custom='true'"><xsl:variable name="column_tsml" select="$list_tsml/tsml:list-entries/tsml:entry/tsml:column[@name=$fixed_col_entries[$row_pos]/@name]"></xsl:variable><xsl:variable name="column_format" select="$column_tsml/tsml:format"></xsl:variable><xsl:variable name="tsml_type" select="$column_format/tsml:type"></xsl:variable><xsl:variable name="input_class"><xsl:choose><xsl:when test="$tsml_type='packed' or $tsml_type='signed' or $tsml_type='float' or $tsml_type='integer'"><xsl:text>number</xsl:text></xsl:when><xsl:otherwise><xsl:choose><xsl:when test="$column_format/tsml:input-case='uppercase'"><xsl:text>utext</xsl:text></xsl:when><xsl:otherwise><xsl:text>text</xsl:text></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose></xsl:variable><xsl:apply-templates select="$grid_col_properties/lxml:item[$col_pos]" mode="std_grid.private.override"><xsl:with-param name="context" select="$fixed_col_entries[$row_pos]"></xsl:with-param><xsl:with-param name="index" select="$col_pos"></xsl:with-param><xsl:with-param name="tsml_col" select="$column_tsml"></xsl:with-param><xsl:with-param name="tsml_col_mode" select="$column_tsml/tsml:mode"></xsl:with-param><xsl:with-param name="tsml_col_max_len" select="$column_format/tsml:max-length"></xsl:with-param><xsl:with-param name="tsml_col_display_len" select="$column_format/tsml:display-max-length"></xsl:with-param><xsl:with-param name="tsml_col_input_type"><xsl:if test="$column_format/tsml:non-display='true'"><xsl:text>password</xsl:text></xsl:if></xsl:with-param><xsl:with-param name="tsml_col_css_class" select="$input_class"></xsl:with-param><xsl:with-param name="cells" select="$fixed_col_entries[$row_pos]/.."></xsl:with-param></xsl:apply-templates></xsl:when><xsl:otherwise><xsl:choose><xsl:when test="$fixed_col_entries[$row_pos]!=''"><xsl:value-of select="$fixed_col_entries[$row_pos]"></xsl:value-of></xsl:when><xsl:otherwise><span style="width:3ex;"><xsl:comment /></span></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose><xsl:comment /></th></xsl:if><xsl:variable name="row" select="lxml:column"></xsl:variable><xsl:for-each select="lxml:column"><xsl:variable name="col_pos" select="position()"></xsl:variable><xsl:variable name="column_tsml" select="$list_tsml/tsml:list-entries/tsml:entry/tsml:column[@name=current()/@name]"></xsl:variable><xsl:variable name="column_format" select="$column_tsml/tsml:format"></xsl:variable><xsl:variable name="tsml_type" select="$column_format/tsml:type"></xsl:variable><xsl:if test="@name!=$listname_fixed_col_field"><td id="{$formname}_{@id}_cell" nowrap="-1"><xsl:variable name="input_class"><xsl:choose><xsl:when test="$tsml_type='packed' or $tsml_type='signed' or $tsml_type='float' or $tsml_type='integer'"><xsl:text>number</xsl:text></xsl:when><xsl:otherwise><xsl:choose><xsl:when test="$column_format/tsml:input-case='uppercase'"><xsl:text>utext</xsl:text></xsl:when><xsl:otherwise><xsl:text>text</xsl:text></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose></xsl:variable><xsl:attribute name="class"><xsl:choose><xsl:when test="not($lweb_design_mode) and $column_tsml/tsml:mode='hidden'"><xsl:text>hidden</xsl:text></xsl:when><xsl:otherwise><xsl:value-of select="$cell_class"></xsl:value-of><xsl:value-of select="' '"></xsl:value-of><xsl:choose><xsl:when test="$tsml_type='packed' or $tsml_type='signed' or $tsml_type='float' or $tsml_type='integer'"><xsl:value-of select="$input_class"></xsl:value-of></xsl:when><xsl:otherwise><xsl:value-of select="$input_class"></xsl:value-of></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose></xsl:attribute><xsl:variable name="col_prop" select="$grid_col_properties[@name=$listname]/lxml:item[$col_pos][current()/@name=@name]"></xsl:variable><xsl:variable name="tsml_weblet" select="$column_tsml/tsml:use-weblets/tsml:use-weblet[@technology-service='LANSA:XHTML'] | $column_tsml/tsml:use-weblet"></xsl:variable><xsl:choose><xsl:when test="not($lweb_data_node/tsml:data/tsml:lists/tsml:list[@name=$listname]/tsml:list-entries/tsml:entry/tsml:column[@name=current()/@name]/tsml:mode!='output')"><div id="{$name}_content" nowrap="-1"><xsl:choose><xsl:when test="$col_prop/@custom='true'"><xsl:apply-templates select="$col_prop" mode="std_grid.private.override"><xsl:with-param name="context" select="."></xsl:with-param><xsl:with-param name="index" select="position()"></xsl:with-param><xsl:with-param name="tsml_col" select="$column_tsml"></xsl:with-param><xsl:with-param name="tsml_col_mode" select="$column_tsml/tsml:mode"></xsl:with-param><xsl:with-param name="tsml_col_max_len" select="$column_format/tsml:max-length"></xsl:with-param><xsl:with-param name="tsml_col_display_len" select="$column_format/tsml:display-max-length"></xsl:with-param><xsl:with-param name="tsml_col_input_type"><xsl:if test="$column_format/tsml:non-display='true'"><xsl:text>password</xsl:text></xsl:if></xsl:with-param><xsl:with-param name="tsml_col_css_class" select="$input_class"></xsl:with-param><xsl:with-param name="cells" select="$row"></xsl:with-param></xsl:apply-templates><xsl:if test="$col_prop/@is_input_cell='true'"><xsl:call-template name="std_grid_column_script.private"><xsl:with-param name="name" select="$name"></xsl:with-param><xsl:with-param name="column_tsml" select="$column_tsml"></xsl:with-param><xsl:with-param name="tsml_col_css_class" select="$input_class"></xsl:with-param><xsl:with-param name="formname" select="$formname"></xsl:with-param><xsl:with-param name="row_pos" select="$row_pos"></xsl:with-param><xsl:with-param name="listname_fixed_col_field" select="$listname_fixed_col_field"></xsl:with-param><xsl:with-param name="col_prop" select="$col_prop"></xsl:with-param><xsl:with-param name="item_name" select="@id"></xsl:with-param></xsl:call-template></xsl:if></xsl:when><xsl:otherwise><xsl:choose><xsl:when test="$tsml_weblet"><xsl:call-template name="std_grid_column_weblet.private"><xsl:with-param name="name" select="$name"></xsl:with-param><xsl:with-param name="column_tsml" select="$column_tsml"></xsl:with-param><xsl:with-param name="weblet_name" select="$tsml_weblet/@name"></xsl:with-param><xsl:with-param name="tsml_col_css_class" select="$input_class"></xsl:with-param><xsl:with-param name="formname" select="$formname"></xsl:with-param><xsl:with-param name="row_pos" select="$row_pos"></xsl:with-param><xsl:with-param name="listname_fixed_col_field" select="$listname_fixed_col_field"></xsl:with-param><xsl:with-param name="col_prop" select="$col_prop"></xsl:with-param></xsl:call-template></xsl:when><xsl:otherwise><xsl:value-of select="."></xsl:value-of></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose><xsl:comment /></div></xsl:when><xsl:otherwise><xsl:choose><xsl:when test="$col_prop/@custom='true'"><xsl:apply-templates select="$col_prop" mode="std_grid.private.override"><xsl:with-param name="context" select="."></xsl:with-param><xsl:with-param name="index" select="position()"></xsl:with-param><xsl:with-param name="tsml_col" select="$column_tsml"></xsl:with-param><xsl:with-param name="tsml_col_mode" select="$column_tsml/tsml:mode"></xsl:with-param><xsl:with-param name="tsml_col_max_len" select="$column_format/tsml:max-length"></xsl:with-param><xsl:with-param name="tsml_col_display_len" select="$column_format/tsml:display-max-length"></xsl:with-param><xsl:with-param name="tsml_col_input_type"><xsl:if test="$column_format/tsml:non-display='true'"><xsl:text>password</xsl:text></xsl:if></xsl:with-param><xsl:with-param name="tsml_col_css_class" select="$input_class"></xsl:with-param><xsl:with-param name="cells" select="$row"></xsl:with-param></xsl:apply-templates><xsl:if test="$col_prop/@is_input_cell='true'"><xsl:call-template name="std_grid_column_script.private"><xsl:with-param name="name" select="$name"></xsl:with-param><xsl:with-param name="column_tsml" select="$column_tsml"></xsl:with-param><xsl:with-param name="tsml_col_css_class" select="$input_class"></xsl:with-param><xsl:with-param name="formname" select="$formname"></xsl:with-param><xsl:with-param name="row_pos" select="$row_pos"></xsl:with-param><xsl:with-param name="listname_fixed_col_field" select="$listname_fixed_col_field"></xsl:with-param><xsl:with-param name="col_prop" select="$col_prop"></xsl:with-param><xsl:with-param name="item_name" select="@id"></xsl:with-param></xsl:call-template></xsl:if></xsl:when><xsl:otherwise><xsl:choose><xsl:when test="$tsml_weblet"><xsl:call-template name="std_grid_column_weblet.private"><xsl:with-param name="name" select="$name"></xsl:with-param><xsl:with-param name="column_tsml" select="$column_tsml"></xsl:with-param><xsl:with-param name="weblet_name" select="$tsml_weblet/@name"></xsl:with-param><xsl:with-param name="tsml_col_css_class" select="$input_class"></xsl:with-param><xsl:with-param name="formname" select="$formname"></xsl:with-param><xsl:with-param name="row_pos" select="$row_pos"></xsl:with-param><xsl:with-param name="listname_fixed_col_field" select="$listname_fixed_col_field"></xsl:with-param><xsl:with-param name="col_prop" select="$col_prop"></xsl:with-param></xsl:call-template></xsl:when><xsl:otherwise><xsl:variable name="fixed_col_offset" select="count(./preceding-sibling::*) - count(./preceding-sibling::*[@name!=$listname_fixed_col_field])"></xsl:variable><xsl:variable name="format_type" select="$column_format/tsml:type"></xsl:variable><input type="text" name="{@id}" id="{@id}" class="{$input_class}" style="background-color: transparent; border-style:none;" size="{$column_format/tsml:display-max-length}" maxlength="{$column_format/tsml:max-length}" value="{.}" onfocus="{$unique_prefix}_{position() -$fixed_col_offset}_onCellClick(stdGetFromDocumentByNameOrId(document, '{$formname}_{@id}_cell'), {$unique_prefix}_itemArray, {position()-1 -$fixed_col_offset}, {$row_pos -1}, this)" onblur="{$unique_prefix}_{position() -$fixed_col_offset}_onCellBlur(stdGetFromDocumentByNameOrId(document, '{$formname}_{@id}_cell'), {$unique_prefix}_itemArray, {position()-1 -$fixed_col_offset}, {$row_pos -1}, this);"><xsl:if test="$column_format/tsml:non-display='true'"><xsl:attribute name="type">password</xsl:attribute></xsl:if><xsl:if test="$col_prop/@readonly='true'"><xsl:attribute name="readonly">true</xsl:attribute></xsl:if><xsl:if test="($format_type = 'alpha') or ($format_type = 'char') or ($format_type = 'varchar')"><xsl:attribute name="onchange">return isValidText(this, '<xsl:value-of select="normalize-space($column_format/tsml:keyboardshift)"></xsl:value-of>')</xsl:attribute></xsl:if></input></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose><xsl:comment /></td></xsl:if></xsl:for-each></tr></xsl:for-each></tbody></table></div></td></tr></tbody></table></div></xsl:template><xsl:template name="std_grid_column_weblet.private"><xsl:param name="name"></xsl:param><xsl:param name="column_tsml"></xsl:param><xsl:param name="weblet_name"></xsl:param><xsl:param name="tsml_col_css_class"></xsl:param><xsl:param name="formname"></xsl:param><xsl:param name="row_pos"></xsl:param><xsl:param name="listname_fixed_col_field"></xsl:param><xsl:param name="col_prop"></xsl:param><xsl:variable name="unique_prefix"><xsl:value-of select="$formname"></xsl:value-of><xsl:text>_</xsl:text><xsl:value-of select="$name"></xsl:value-of></xsl:variable><xsl:variable name="design_css_class"></xsl:variable><xsl:variable name="column_format" select="$column_tsml/tsml:format"></xsl:variable><xsl:variable name="tsml_col_mode" select="$column_tsml/tsml:mode"></xsl:variable><xsl:variable name="tsml_col_max_len" select="$column_format/tsml:max-length"></xsl:variable><xsl:variable name="tsml_col_display_len" select="$column_format/tsml:display-max-length"></xsl:variable><xsl:variable name="tsml_col_input_type"><xsl:if test="$column_format/tsml:non-display='true'"><xsl:text>password</xsl:text></xsl:if></xsl:variable><xsl:variable name="read_only" select="$col_prop/@readonly='true'"></xsl:variable><xsl:choose><xsl:when test="$weblet_name='std_boolean.std_boolean'"><xsl:call-template name="std_boolean"><xsl:with-param name="name" select="@id"></xsl:with-param><xsl:with-param name="value" select="."></xsl:with-param><xsl:with-param name="display_mode" select="$tsml_col_mode"></xsl:with-param><xsl:with-param name="formname" select="$formname"></xsl:with-param><xsl:with-param name="class" select="concat($tsml_col_css_class, $design_css_class)"></xsl:with-param></xsl:call-template></xsl:when><xsl:when test="$weblet_name='std_char.std_char'"><xsl:call-template name="std_char"><xsl:with-param name="name" select="@id"></xsl:with-param><xsl:with-param name="value" select="."></xsl:with-param><xsl:with-param name="display_mode" select="$tsml_col_mode"></xsl:with-param><xsl:with-param name="maxlength" select="$tsml_col_max_len"></xsl:with-param><xsl:with-param name="display_length" select="$tsml_col_display_len"></xsl:with-param><xsl:with-param name="type" select="$tsml_col_input_type"></xsl:with-param><xsl:with-param name="keyboard_shift" select="normalize-space($column_format/tsml:keyboardshift)"></xsl:with-param><xsl:with-param name="class" select="concat($tsml_col_css_class, $design_css_class)"></xsl:with-param><xsl:with-param name="read_only" select="$read_only"></xsl:with-param></xsl:call-template></xsl:when><xsl:when test="$weblet_name='std_date.std_date'"><xsl:call-template name="std_date"><xsl:with-param name="name" select="@id"></xsl:with-param><xsl:with-param name="value" select="."></xsl:with-param><xsl:with-param name="display_mode" select="$tsml_col_mode"></xsl:with-param><xsl:with-param name="formname" select="$formname"></xsl:with-param><xsl:with-param name="allow_sqlnull" select="$column_format/tsml:sql-nullable = 'true'"></xsl:with-param><xsl:with-param name="class" select="concat($tsml_col_css_class, $design_css_class)"></xsl:with-param><xsl:with-param name="read_only" select="$read_only"></xsl:with-param></xsl:call-template></xsl:when><xsl:when test="$weblet_name='std_datetime.std_datetime'"><xsl:call-template name="std_datetime"><xsl:with-param name="name" select="@id"></xsl:with-param><xsl:with-param name="value" select="."></xsl:with-param><xsl:with-param name="display_mode" select="$tsml_col_mode"></xsl:with-param><xsl:with-param name="size" select="$tsml_col_max_len"></xsl:with-param><xsl:with-param name="formname" select="$formname"></xsl:with-param><xsl:with-param name="display_in_utc" select="$column_format/tsml:display-utc = 'true'"></xsl:with-param><xsl:with-param name="allow_sqlnull" select="$column_format/tsml:sql-nullable = 'true'"></xsl:with-param><xsl:with-param name="class" select="concat($tsml_col_css_class, $design_css_class)"></xsl:with-param><xsl:with-param name="read_only" select="$read_only"></xsl:with-param></xsl:call-template></xsl:when><xsl:when test="$weblet_name='std_float.std_float'"><xsl:call-template name="std_float"><xsl:with-param name="name" select="@id"></xsl:with-param><xsl:with-param name="value" select="."></xsl:with-param><xsl:with-param name="display_mode" select="$tsml_col_mode"></xsl:with-param><xsl:with-param name="size" select="$tsml_col_max_len"></xsl:with-param><xsl:with-param name="maxlength" select="$tsml_col_display_len"></xsl:with-param><xsl:with-param name="type" select="$tsml_col_input_type"></xsl:with-param><xsl:with-param name="class" select="concat($tsml_col_css_class, $design_css_class)"></xsl:with-param><xsl:with-param name="read_only" select="$read_only"></xsl:with-param></xsl:call-template></xsl:when><xsl:when test="$weblet_name='std_integer.std_integer'"><xsl:call-template name="std_integer"><xsl:with-param name="name" select="@id"></xsl:with-param><xsl:with-param name="value" select="."></xsl:with-param><xsl:with-param name="display_mode" select="$tsml_col_mode"></xsl:with-param><xsl:with-param name="size" select="$tsml_col_max_len"></xsl:with-param><xsl:with-param name="maxlength" select="$tsml_col_display_len"></xsl:with-param><xsl:with-param name="type" select="$tsml_col_input_type"></xsl:with-param><xsl:with-param name="class" select="concat($tsml_col_css_class, $design_css_class)"></xsl:with-param><xsl:with-param name="read_only" select="$read_only"></xsl:with-param></xsl:call-template></xsl:when><xsl:when test="$weblet_name='std_time.std_time'"><xsl:call-template name="std_time"><xsl:with-param name="name" select="@id"></xsl:with-param><xsl:with-param name="value" select="."></xsl:with-param><xsl:with-param name="display_mode" select="$tsml_col_mode"></xsl:with-param><xsl:with-param name="formname" select="$formname"></xsl:with-param><xsl:with-param name="allow_sqlnull" select="$column_format/tsml:sql-nullable = 'true'"></xsl:with-param><xsl:with-param name="class" select="concat($tsml_col_css_class, $design_css_class)"></xsl:with-param><xsl:with-param name="read_only" select="$read_only"></xsl:with-param></xsl:call-template></xsl:when><xsl:when test="$weblet_name='std_varchar.std_varchar'"><xsl:call-template name="std_varchar"><xsl:with-param name="name" select="@id"></xsl:with-param><xsl:with-param name="value" select="."></xsl:with-param><xsl:with-param name="display_mode" select="$tsml_col_mode"></xsl:with-param><xsl:with-param name="maxlength" select="$tsml_col_max_len"></xsl:with-param><xsl:with-param name="display_length" select="$tsml_col_display_len"></xsl:with-param><xsl:with-param name="type" select="$tsml_col_input_type"></xsl:with-param><xsl:with-param name="keyboard_shift" select="normalize-space($column_format/tsml:keyboardshift)"></xsl:with-param><xsl:with-param name="class" select="concat($tsml_col_css_class, $design_css_class)"></xsl:with-param><xsl:with-param name="read_only" select="$read_only"></xsl:with-param></xsl:call-template></xsl:when><xsl:when test="$weblet_name='std_datepicker.std_datepicker'"><xsl:call-template name="std_date"><xsl:with-param name="name" select="@id"></xsl:with-param><xsl:with-param name="value" select="."></xsl:with-param><xsl:with-param name="display_mode" select="$column_tsml/tsml:mode"></xsl:with-param><xsl:with-param name="formname" select="$formname"></xsl:with-param><xsl:with-param name="allow_sqlnull" select="$column_format/tsml:sql-nullable = 'true'"></xsl:with-param><xsl:with-param name="class" select="concat($tsml_col_css_class, $design_css_class)"></xsl:with-param><xsl:with-param name="read_only" select="$read_only"></xsl:with-param></xsl:call-template></xsl:when><xsl:when test="$weblet_name='std_datetimepicker.std_datetimepicker'"><xsl:call-template name="std_datetime"><xsl:with-param name="name" select="@id"></xsl:with-param><xsl:with-param name="value" select="."></xsl:with-param><xsl:with-param name="display_mode" select="$column_tsml/tsml:mode"></xsl:with-param><xsl:with-param name="size" select="$column_format/tsml:max-length"></xsl:with-param><xsl:with-param name="formname" select="$formname"></xsl:with-param><xsl:with-param name="display_in_utc" select="$column_format/tsml:display-utc = 'true'"></xsl:with-param><xsl:with-param name="allow_sqlnull" select="$column_format/tsml:sql-nullable = 'true'"></xsl:with-param><xsl:with-param name="class" select="concat($tsml_col_css_class, $design_css_class)"></xsl:with-param><xsl:with-param name="read_only" select="$read_only"></xsl:with-param></xsl:call-template></xsl:when><xsl:when test="$weblet_name='std_timepicker.std_timepicker'"><xsl:call-template name="std_time"><xsl:with-param name="name" select="@id"></xsl:with-param><xsl:with-param name="value" select="."></xsl:with-param><xsl:with-param name="display_mode" select="$column_tsml/tsml:mode"></xsl:with-param><xsl:with-param name="formname" select="$formname"></xsl:with-param><xsl:with-param name="allow_sqlnull" select="$column_format/tsml:sql-nullable = 'true'"></xsl:with-param><xsl:with-param name="class" select="concat($tsml_col_css_class, $design_css_class)"></xsl:with-param><xsl:with-param name="read_only" select="$read_only"></xsl:with-param></xsl:call-template></xsl:when></xsl:choose><xsl:variable name="item_name"><xsl:choose><xsl:when test="$weblet_name='std_time.std_time' or $weblet_name='std_datetime.std_datetime' or $weblet_name='std_date.std_date'"><xsl:value-of select="concat('__', @id, '_PROXY')"></xsl:value-of></xsl:when><xsl:otherwise><xsl:value-of select="@id"></xsl:value-of></xsl:otherwise></xsl:choose></xsl:variable><xsl:call-template name="std_grid_column_script.private"><xsl:with-param name="name" select="$name"></xsl:with-param><xsl:with-param name="column_tsml" select="$column_tsml"></xsl:with-param><xsl:with-param name="tsml_col_css_class" select="$tsml_col_css_class"></xsl:with-param><xsl:with-param name="formname" select="$formname"></xsl:with-param><xsl:with-param name="row_pos" select="$row_pos"></xsl:with-param><xsl:with-param name="listname_fixed_col_field" select="$listname_fixed_col_field"></xsl:with-param><xsl:with-param name="col_prop" select="$col_prop"></xsl:with-param><xsl:with-param name="item_name" select="$item_name"></xsl:with-param></xsl:call-template></xsl:template><xsl:template name="std_grid_column_script.private"><xsl:param name="name"></xsl:param><xsl:param name="column_tsml"></xsl:param><xsl:param name="tsml_col_css_class"></xsl:param><xsl:param name="formname"></xsl:param><xsl:param name="row_pos"></xsl:param><xsl:param name="listname_fixed_col_field"></xsl:param><xsl:param name="col_prop"></xsl:param><xsl:param name="item_name"></xsl:param><xsl:variable name="unique_prefix"><xsl:value-of select="$formname"></xsl:value-of><xsl:text>_</xsl:text><xsl:value-of select="$name"></xsl:value-of></xsl:variable><xsl:variable name="read_only" select="$col_prop/@readonly='true'"></xsl:variable><script type="text/javascript"><xsl:text disable-output-escaping="yes">//&lt;![CDATA[
			</xsl:text><xsl:variable name="fixed_col_offset" select="count(./preceding-sibling::*) - count(./preceding-sibling::*[@name!=$listname_fixed_col_field])"></xsl:variable>
stdGridInitCell("<xsl:value-of select="$item_name"></xsl:value-of>", <xsl:value-of select="$row_pos -1"></xsl:value-of>, function() { var elem = stdGetRealElement(document, "<xsl:value-of select="$item_name"></xsl:value-of>", "<xsl:value-of select="$formname"></xsl:value-of>"); <xsl:value-of select="$unique_prefix"></xsl:value-of>_<xsl:value-of select="position() -$fixed_col_offset"></xsl:value-of>_onCellBlur(stdGetFromDocumentByNameOrId(document, "<xsl:value-of select="$formname"></xsl:value-of>_<xsl:value-of select="@id"></xsl:value-of>_cell"), <xsl:value-of select="$unique_prefix"></xsl:value-of>_itemArray, <xsl:value-of select="position()-1 -$fixed_col_offset"></xsl:value-of>, <xsl:value-of select="$row_pos -1"></xsl:value-of>, elem);}, function() { var elem = stdGetRealElement(document, "<xsl:value-of select="$item_name"></xsl:value-of>", "<xsl:value-of select="$formname"></xsl:value-of>"); <xsl:value-of select="$unique_prefix"></xsl:value-of>_<xsl:value-of select="position() -$fixed_col_offset"></xsl:value-of>_onCellClick(stdGetFromDocumentByNameOrId(document, "<xsl:value-of select="$formname"></xsl:value-of>_<xsl:value-of select="@id"></xsl:value-of>_cell"), <xsl:value-of select="$unique_prefix"></xsl:value-of>_itemArray, <xsl:value-of select="position()-1 -$fixed_col_offset"></xsl:value-of>, <xsl:value-of select="$row_pos -1"></xsl:value-of>, elem);}, "<xsl:value-of select="$formname"></xsl:value-of>", <xsl:choose><xsl:when test="$read_only">true</xsl:when><xsl:otherwise>false</xsl:otherwise></xsl:choose>);
			<xsl:text disable-output-escaping="yes">//]]&gt;</xsl:text></script></xsl:template><xsl:template match="lxml:item[../@id='std_grid']" mode="std_grid.private.override"><xsl:param name="context"></xsl:param><xsl:param name="index"></xsl:param><xsl:param name="tsml_col"></xsl:param><xsl:param name="tsml_col_mode"></xsl:param><xsl:param name="tsml_col_max_len"></xsl:param><xsl:param name="tsml_col_display_len"></xsl:param><xsl:param name="tsml_col_input_type"></xsl:param><xsl:param name="tsml_col_css_class"></xsl:param><xsl:param name="formname"></xsl:param><xsl:param name="cells"></xsl:param><xsl:choose><xsl:when test="$index=1"><xsl:apply-templates select="$context" mode="_std_grid_1.override"><xsl:with-param name="context" select="."></xsl:with-param><xsl:with-param name="index" select="$index"></xsl:with-param><xsl:with-param name="tsml_col" select="$tsml_col"></xsl:with-param><xsl:with-param name="tsml_col_mode" select="$tsml_col_mode"></xsl:with-param><xsl:with-param name="tsml_col_max_len" select="$tsml_col_max_len"></xsl:with-param><xsl:with-param name="tsml_col_display_len" select="$tsml_col_display_len"></xsl:with-param><xsl:with-param name="tsml_col_input_type" select="$tsml_col_input_type"></xsl:with-param><xsl:with-param name="tsml_col_css_class" select="$tsml_col_css_class"></xsl:with-param><xsl:with-param name="formname" select="$formname"></xsl:with-param><xsl:with-param name="cells" select="$cells"></xsl:with-param></xsl:apply-templates></xsl:when><xsl:when test="$index=2"><xsl:apply-templates select="$context" mode="_std_grid_2.override"><xsl:with-param name="context" select="."></xsl:with-param><xsl:with-param name="index" select="$index"></xsl:with-param><xsl:with-param name="tsml_col" select="$tsml_col"></xsl:with-param><xsl:with-param name="tsml_col_mode" select="$tsml_col_mode"></xsl:with-param><xsl:with-param name="tsml_col_max_len" select="$tsml_col_max_len"></xsl:with-param><xsl:with-param name="tsml_col_display_len" select="$tsml_col_display_len"></xsl:with-param><xsl:with-param name="tsml_col_input_type" select="$tsml_col_input_type"></xsl:with-param><xsl:with-param name="tsml_col_css_class" select="$tsml_col_css_class"></xsl:with-param><xsl:with-param name="formname" select="$formname"></xsl:with-param><xsl:with-param name="cells" select="$cells"></xsl:with-param></xsl:apply-templates></xsl:when><xsl:when test="$index=3"><xsl:apply-templates select="$context" mode="_std_grid_3.override"><xsl:with-param name="context" select="."></xsl:with-param><xsl:with-param name="index" select="$index"></xsl:with-param><xsl:with-param name="tsml_col" select="$tsml_col"></xsl:with-param><xsl:with-param name="tsml_col_mode" select="$tsml_col_mode"></xsl:with-param><xsl:with-param name="tsml_col_max_len" select="$tsml_col_max_len"></xsl:with-param><xsl:with-param name="tsml_col_display_len" select="$tsml_col_display_len"></xsl:with-param><xsl:with-param name="tsml_col_input_type" select="$tsml_col_input_type"></xsl:with-param><xsl:with-param name="tsml_col_css_class" select="$tsml_col_css_class"></xsl:with-param><xsl:with-param name="formname" select="$formname"></xsl:with-param><xsl:with-param name="cells" select="$cells"></xsl:with-param></xsl:apply-templates></xsl:when><xsl:when test="$index=4"><xsl:apply-templates select="$context" mode="_std_grid_4.override"><xsl:with-param name="context" select="."></xsl:with-param><xsl:with-param name="index" select="$index"></xsl:with-param><xsl:with-param name="tsml_col" select="$tsml_col"></xsl:with-param><xsl:with-param name="tsml_col_mode" select="$tsml_col_mode"></xsl:with-param><xsl:with-param name="tsml_col_max_len" select="$tsml_col_max_len"></xsl:with-param><xsl:with-param name="tsml_col_display_len" select="$tsml_col_display_len"></xsl:with-param><xsl:with-param name="tsml_col_input_type" select="$tsml_col_input_type"></xsl:with-param><xsl:with-param name="tsml_col_css_class" select="$tsml_col_css_class"></xsl:with-param><xsl:with-param name="formname" select="$formname"></xsl:with-param><xsl:with-param name="cells" select="$cells"></xsl:with-param></xsl:apply-templates></xsl:when><xsl:when test="$index=5"><xsl:apply-templates select="$context" mode="_std_grid_5.override"><xsl:with-param name="context" select="."></xsl:with-param><xsl:with-param name="index" select="$index"></xsl:with-param><xsl:with-param name="tsml_col" select="$tsml_col"></xsl:with-param><xsl:with-param name="tsml_col_mode" select="$tsml_col_mode"></xsl:with-param><xsl:with-param name="tsml_col_max_len" select="$tsml_col_max_len"></xsl:with-param><xsl:with-param name="tsml_col_display_len" select="$tsml_col_display_len"></xsl:with-param><xsl:with-param name="tsml_col_input_type" select="$tsml_col_input_type"></xsl:with-param><xsl:with-param name="tsml_col_css_class" select="$tsml_col_css_class"></xsl:with-param><xsl:with-param name="formname" select="$formname"></xsl:with-param><xsl:with-param name="cells" select="$cells"></xsl:with-param></xsl:apply-templates></xsl:when></xsl:choose></xsl:template><xsl:template match="*" mode="_std_grid_1.override"><xsl:param name="context"></xsl:param><xsl:param name="index"></xsl:param><xsl:param name="tsml_col"></xsl:param><xsl:param name="tsml_col_mode"></xsl:param><xsl:param name="tsml_col_max_len"></xsl:param><xsl:param name="tsml_col_display_len"></xsl:param><xsl:param name="tsml_col_input_type"></xsl:param><xsl:param name="tsml_col_css_class"></xsl:param><xsl:param name="formname"></xsl:param><xsl:param name="cells"></xsl:param></xsl:template><xsl:template match="*" mode="_std_grid_2.override"><xsl:param name="context"></xsl:param><xsl:param name="index"></xsl:param><xsl:param name="tsml_col"></xsl:param><xsl:param name="tsml_col_mode"></xsl:param><xsl:param name="tsml_col_max_len"></xsl:param><xsl:param name="tsml_col_display_len"></xsl:param><xsl:param name="tsml_col_input_type"></xsl:param><xsl:param name="tsml_col_css_class"></xsl:param><xsl:param name="formname"></xsl:param><xsl:param name="cells"></xsl:param></xsl:template><xsl:template match="*" mode="_std_grid_3.override"><xsl:param name="context"></xsl:param><xsl:param name="index"></xsl:param><xsl:param name="tsml_col"></xsl:param><xsl:param name="tsml_col_mode"></xsl:param><xsl:param name="tsml_col_max_len"></xsl:param><xsl:param name="tsml_col_display_len"></xsl:param><xsl:param name="tsml_col_input_type"></xsl:param><xsl:param name="tsml_col_css_class"></xsl:param><xsl:param name="formname"></xsl:param><xsl:param name="cells"></xsl:param></xsl:template><xsl:template match="*" mode="_std_grid_4.override"><xsl:param name="context"></xsl:param><xsl:param name="index"></xsl:param><xsl:param name="tsml_col"></xsl:param><xsl:param name="tsml_col_mode"></xsl:param><xsl:param name="tsml_col_max_len"></xsl:param><xsl:param name="tsml_col_display_len"></xsl:param><xsl:param name="tsml_col_input_type"></xsl:param><xsl:param name="tsml_col_css_class"></xsl:param><xsl:param name="formname"></xsl:param><xsl:param name="cells"></xsl:param></xsl:template><xsl:template match="*" mode="_std_grid_5.override"><xsl:param name="context"></xsl:param><xsl:param name="index"></xsl:param><xsl:param name="tsml_col"></xsl:param><xsl:param name="tsml_col_mode"></xsl:param><xsl:param name="tsml_col_max_len"></xsl:param><xsl:param name="tsml_col_display_len"></xsl:param><xsl:param name="tsml_col_input_type"></xsl:param><xsl:param name="tsml_col_css_class"></xsl:param><xsl:param name="formname"></xsl:param><xsl:param name="cells"></xsl:param></xsl:template><xsl:template match="lxml:item[../@id='std_grid_header']" mode="std_grid.private.override"><xsl:param name="context"></xsl:param><xsl:param name="index"></xsl:param><xsl:param name="tsml_col"></xsl:param><xsl:param name="tsml_col_mode"></xsl:param><xsl:param name="tsml_col_max_len"></xsl:param><xsl:param name="tsml_col_display_len"></xsl:param><xsl:param name="tsml_col_input_type"></xsl:param><xsl:param name="tsml_col_css_class"></xsl:param><xsl:param name="formname"></xsl:param><xsl:param name="headers"></xsl:param><xsl:param name="columns"></xsl:param><xsl:choose><xsl:when test="$index=1"><xsl:apply-templates select="$context" mode="_std_grid_header_1.override"><xsl:with-param name="context" select="."></xsl:with-param><xsl:with-param name="index" select="$index"></xsl:with-param><xsl:with-param name="tsml_col" select="$tsml_col"></xsl:with-param><xsl:with-param name="tsml_col_mode" select="$tsml_col_mode"></xsl:with-param><xsl:with-param name="tsml_col_max_len" select="$tsml_col_max_len"></xsl:with-param><xsl:with-param name="tsml_col_display_len" select="$tsml_col_display_len"></xsl:with-param><xsl:with-param name="tsml_col_input_type" select="$tsml_col_input_type"></xsl:with-param><xsl:with-param name="tsml_col_css_class" select="$tsml_col_css_class"></xsl:with-param><xsl:with-param name="formname" select="$formname"></xsl:with-param><xsl:with-param name="headers" select="$headers"></xsl:with-param><xsl:with-param name="columns" select="$columns"></xsl:with-param></xsl:apply-templates></xsl:when><xsl:when test="$index=2"><xsl:apply-templates select="$context" mode="_std_grid_header_2.override"><xsl:with-param name="context" select="."></xsl:with-param><xsl:with-param name="index" select="$index"></xsl:with-param><xsl:with-param name="tsml_col" select="$tsml_col"></xsl:with-param><xsl:with-param name="tsml_col_mode" select="$tsml_col_mode"></xsl:with-param><xsl:with-param name="tsml_col_max_len" select="$tsml_col_max_len"></xsl:with-param><xsl:with-param name="tsml_col_display_len" select="$tsml_col_display_len"></xsl:with-param><xsl:with-param name="tsml_col_input_type" select="$tsml_col_input_type"></xsl:with-param><xsl:with-param name="tsml_col_css_class" select="$tsml_col_css_class"></xsl:with-param><xsl:with-param name="formname" select="$formname"></xsl:with-param><xsl:with-param name="headers" select="$headers"></xsl:with-param><xsl:with-param name="columns" select="$columns"></xsl:with-param></xsl:apply-templates></xsl:when><xsl:when test="$index=3"><xsl:apply-templates select="$context" mode="_std_grid_header_3.override"><xsl:with-param name="context" select="."></xsl:with-param><xsl:with-param name="index" select="$index"></xsl:with-param><xsl:with-param name="tsml_col" select="$tsml_col"></xsl:with-param><xsl:with-param name="tsml_col_mode" select="$tsml_col_mode"></xsl:with-param><xsl:with-param name="tsml_col_max_len" select="$tsml_col_max_len"></xsl:with-param><xsl:with-param name="tsml_col_display_len" select="$tsml_col_display_len"></xsl:with-param><xsl:with-param name="tsml_col_input_type" select="$tsml_col_input_type"></xsl:with-param><xsl:with-param name="tsml_col_css_class" select="$tsml_col_css_class"></xsl:with-param><xsl:with-param name="formname" select="$formname"></xsl:with-param><xsl:with-param name="headers" select="$headers"></xsl:with-param><xsl:with-param name="columns" select="$columns"></xsl:with-param></xsl:apply-templates></xsl:when><xsl:when test="$index=4"><xsl:apply-templates select="$context" mode="_std_grid_header_4.override"><xsl:with-param name="context" select="."></xsl:with-param><xsl:with-param name="index" select="$index"></xsl:with-param><xsl:with-param name="tsml_col" select="$tsml_col"></xsl:with-param><xsl:with-param name="tsml_col_mode" select="$tsml_col_mode"></xsl:with-param><xsl:with-param name="tsml_col_max_len" select="$tsml_col_max_len"></xsl:with-param><xsl:with-param name="tsml_col_display_len" select="$tsml_col_display_len"></xsl:with-param><xsl:with-param name="tsml_col_input_type" select="$tsml_col_input_type"></xsl:with-param><xsl:with-param name="tsml_col_css_class" select="$tsml_col_css_class"></xsl:with-param><xsl:with-param name="formname" select="$formname"></xsl:with-param><xsl:with-param name="headers" select="$headers"></xsl:with-param><xsl:with-param name="columns" select="$columns"></xsl:with-param></xsl:apply-templates></xsl:when><xsl:when test="$index=5"><xsl:apply-templates select="$context" mode="_std_grid_header_5.override"><xsl:with-param name="context" select="."></xsl:with-param><xsl:with-param name="index" select="$index"></xsl:with-param><xsl:with-param name="tsml_col" select="$tsml_col"></xsl:with-param><xsl:with-param name="tsml_col_mode" select="$tsml_col_mode"></xsl:with-param><xsl:with-param name="tsml_col_max_len" select="$tsml_col_max_len"></xsl:with-param><xsl:with-param name="tsml_col_display_len" select="$tsml_col_display_len"></xsl:with-param><xsl:with-param name="tsml_col_input_type" select="$tsml_col_input_type"></xsl:with-param><xsl:with-param name="tsml_col_css_class" select="$tsml_col_css_class"></xsl:with-param><xsl:with-param name="formname" select="$formname"></xsl:with-param><xsl:with-param name="headers" select="$headers"></xsl:with-param><xsl:with-param name="columns" select="$columns"></xsl:with-param></xsl:apply-templates></xsl:when></xsl:choose></xsl:template><xsl:template match="*" mode="_std_grid_header_1.override"><xsl:param name="context"></xsl:param><xsl:param name="index"></xsl:param><xsl:param name="tsml_col"></xsl:param><xsl:param name="tsml_col_mode"></xsl:param><xsl:param name="tsml_col_max_len"></xsl:param><xsl:param name="tsml_col_display_len"></xsl:param><xsl:param name="tsml_col_input_type"></xsl:param><xsl:param name="tsml_col_css_class"></xsl:param><xsl:param name="formname"></xsl:param><xsl:param name="headers"></xsl:param><xsl:param name="columns"></xsl:param></xsl:template><xsl:template match="*" mode="_std_grid_header_2.override"><xsl:param name="context"></xsl:param><xsl:param name="index"></xsl:param><xsl:param name="tsml_col"></xsl:param><xsl:param name="tsml_col_mode"></xsl:param><xsl:param name="tsml_col_max_len"></xsl:param><xsl:param name="tsml_col_display_len"></xsl:param><xsl:param name="tsml_col_input_type"></xsl:param><xsl:param name="tsml_col_css_class"></xsl:param><xsl:param name="formname"></xsl:param><xsl:param name="headers"></xsl:param><xsl:param name="columns"></xsl:param></xsl:template><xsl:template match="*" mode="_std_grid_header_3.override"><xsl:param name="context"></xsl:param><xsl:param name="index"></xsl:param><xsl:param name="tsml_col"></xsl:param><xsl:param name="tsml_col_mode"></xsl:param><xsl:param name="tsml_col_max_len"></xsl:param><xsl:param name="tsml_col_display_len"></xsl:param><xsl:param name="tsml_col_input_type"></xsl:param><xsl:param name="tsml_col_css_class"></xsl:param><xsl:param name="formname"></xsl:param><xsl:param name="headers"></xsl:param><xsl:param name="columns"></xsl:param></xsl:template><xsl:template match="*" mode="_std_grid_header_4.override"><xsl:param name="context"></xsl:param><xsl:param name="index"></xsl:param><xsl:param name="tsml_col"></xsl:param><xsl:param name="tsml_col_mode"></xsl:param><xsl:param name="tsml_col_max_len"></xsl:param><xsl:param name="tsml_col_display_len"></xsl:param><xsl:param name="tsml_col_input_type"></xsl:param><xsl:param name="tsml_col_css_class"></xsl:param><xsl:param name="formname"></xsl:param><xsl:param name="headers"></xsl:param><xsl:param name="columns"></xsl:param></xsl:template><xsl:template match="*" mode="_std_grid_header_5.override"><xsl:param name="context"></xsl:param><xsl:param name="index"></xsl:param><xsl:param name="tsml_col"></xsl:param><xsl:param name="tsml_col_mode"></xsl:param><xsl:param name="tsml_col_max_len"></xsl:param><xsl:param name="tsml_col_display_len"></xsl:param><xsl:param name="tsml_col_input_type"></xsl:param><xsl:param name="tsml_col_css_class"></xsl:param><xsl:param name="formname"></xsl:param><xsl:param name="headers"></xsl:param><xsl:param name="columns"></xsl:param></xsl:template></xsl:transform>