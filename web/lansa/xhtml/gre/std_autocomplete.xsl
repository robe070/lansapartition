<?xml version="1.0" encoding="UTF-8"?><!--(c) 2011, 2013 LANSA--><!--XHTML jQuery UI Autocomplete--><!--$Workfile:: std_autocomplete.xsl $--><!--$UTCDate:: 2013-07-25 01:08:49Z $--><!--$Revision:: 27 $--><xsl:transform version="1.0" exclude-result-prefixes="lxml wd xslt" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xslt="http://www.lansa.com/2002/XSL/Transform-Alias" xmlns:lxml="http://www.lansa.com/2002/XML/Runtime-Data" xmlns:wd="http://www.lansa.com/2002/XSL/Weblet-Design" xmlns="http://www.w3.org/1999/xhtml"><xsl:import href="std_types.xsl"></xsl:import><xsl:import href="std_util.xsl"></xsl:import><xsl:output method="xml" omit-xml-declaration="yes" encoding="UTF-8" indent="yes"></xsl:output><xsl:namespace-alias stylesheet-prefix="xslt" result-prefix="xsl"></xsl:namespace-alias><xsl:template name="std_autocomplete"><xsl:param name="name"></xsl:param><xsl:param name="value"></xsl:param><xsl:param name="display_mode" select="'input'"></xsl:param><xsl:param name="maxlength"></xsl:param><xsl:param name="display_length"></xsl:param><xsl:param name="keyboard_shift" select="' '"></xsl:param><xsl:param name="minLength" select="1"></xsl:param><xsl:param name="delay" select="300"></xsl:param><xsl:param name="sourceWamName" select="$lweb_WAMName"></xsl:param><xsl:param name="sourceWrName"></xsl:param><xsl:param name="termField" select="''"></xsl:param><xsl:param name="listName"></xsl:param><xsl:param name="labelField" select="''"></xsl:param><xsl:param name="valueField" select="''"></xsl:param><xsl:param name="extraFields" select="''"></xsl:param><xsl:param name="cache" select="false()"></xsl:param><xsl:param name="matchContains" select="false()"></xsl:param><xsl:param name="hide_if" select="false()"></xsl:param><xsl:param name="class" select="'text'"></xsl:param><xsl:param name="tab_index"></xsl:param><xsl:param name="title"></xsl:param><xsl:param name="read_only" select="false()"></xsl:param><xsl:param name="disabled" select="false()"></xsl:param><xsl:param name="pos_absolute"></xsl:param><xsl:param name="width"></xsl:param><xsl:param name="height"></xsl:param><xsl:param name="scroll" select="false()"></xsl:param><xsl:param name="scrollHeight" select="'180px'"></xsl:param><xsl:param name="onchange_script" select="''"></xsl:param><xsl:param name="onselect_script" select="''"></xsl:param><xsl:if test="not($hide_if) or $lweb_design_mode"><span class="ui-widget"><xsl:choose><xsl:when test="$display_mode !='output'"><input name="{$name}" id="{$name}" class="{$class}" value="{$value}" size="{$display_length}" maxlength="{$maxlength}"><xsl:attribute name="type"><xsl:choose><xsl:when test="$display_mode='hidden'"><xsl:text>hidden</xsl:text></xsl:when><xsl:otherwise>text</xsl:otherwise></xsl:choose></xsl:attribute><xsl:if test="$pos_absolute or $height or $width"><xsl:attribute name="style"><xsl:call-template name="make_size_and_pos_style_v2.private"><xsl:with-param name="caller_name" select="'std_autocomplete.xsl'"></xsl:with-param><xsl:with-param name="pos_absolute" select="$pos_absolute"></xsl:with-param><xsl:with-param name="height" select="$height"></xsl:with-param><xsl:with-param name="width" select="$width"></xsl:with-param></xsl:call-template></xsl:attribute></xsl:if><xsl:if test="$tab_index != ''"><xsl:attribute name="tabindex"><xsl:value-of select="$tab_index"></xsl:value-of></xsl:attribute></xsl:if><xsl:if test="$title != ''"><xsl:attribute name="title"><xsl:value-of select="$title"></xsl:value-of></xsl:attribute></xsl:if><xsl:if test="boolean($read_only)"><xsl:attribute name="readonly">readonly</xsl:attribute></xsl:if></input><script type="text/javascript"><xsl:text disable-output-escaping="yes">//&lt;![CDATA[</xsl:text><xsl:text></xsl:text>
(function() {<xsl:text></xsl:text><xsl:if test="$onchange_script != ''">
	var onchangeFunc = function(event, ui) { try { <xsl:value-of select="$onchange_script"></xsl:value-of>; } catch(e) { alert(e); } };<xsl:text></xsl:text></xsl:if><xsl:if test="$onselect_script != ''">
	var onselectFunc = function(event, ui) { try { <xsl:value-of select="$onselect_script"></xsl:value-of>; } catch(e) { alert(e); } };<xsl:text></xsl:text></xsl:if>
	Lstd.Weblets.stdAutocomplete.init({inputId: "<xsl:value-of select="$name"></xsl:value-of>"<xsl:text></xsl:text><xsl:if test="$minLength != 1">, minLength: <xsl:value-of select="$minLength"></xsl:value-of></xsl:if><xsl:if test="$delay != 300">, delay: "<xsl:value-of select="$delay"></xsl:value-of>"</xsl:if><xsl:if test="$sourceWamName != ''">, sourceWamName: "<xsl:value-of select="$sourceWamName"></xsl:value-of>"</xsl:if><xsl:if test="$sourceWrName != ''">, sourceWrName: "<xsl:value-of select="$sourceWrName"></xsl:value-of>"</xsl:if><xsl:if test="$termField != ''">, termField: "<xsl:value-of select="$termField"></xsl:value-of>"</xsl:if><xsl:if test="$listName">, listName: "<xsl:value-of select="$listName"></xsl:value-of>"</xsl:if><xsl:if test="$labelField != ''">, labelField: "<xsl:value-of select="$labelField"></xsl:value-of>"</xsl:if><xsl:if test="$valueField != ''">, valueField: "<xsl:value-of select="$valueField"></xsl:value-of>"</xsl:if><xsl:if test="$extraFields != ''">, extraFields: "<xsl:value-of select="$extraFields"></xsl:value-of>"</xsl:if><xsl:if test="$cache">, cache: <xsl:value-of select="$cache"></xsl:value-of></xsl:if><xsl:if test="$matchContains">, matchContains: <xsl:value-of select="$matchContains"></xsl:value-of></xsl:if><xsl:if test="$scroll">, scroll: <xsl:value-of select="$scroll"></xsl:value-of></xsl:if><xsl:if test="$scroll and $scrollHeight != '180px'">, scrollHeight: <xsl:value-of select="$scrollHeight"></xsl:value-of></xsl:if><xsl:if test="$onchange_script != ''">, onchangeScript: onchangeFunc</xsl:if><xsl:if test="$onselect_script != ''">, onselectScript: onselectFunc</xsl:if>});<xsl:text></xsl:text>
})(); <xsl:text></xsl:text><xsl:text disable-output-escaping="yes">//]]&gt;</xsl:text></script></xsl:when><xsl:otherwise><span><xsl:if test="$title != ''"><xsl:attribute name="title"><xsl:value-of select="$title"></xsl:value-of></xsl:attribute></xsl:if><xsl:if test="$class!=''"><xsl:attribute name="class"><xsl:value-of select="$class"></xsl:value-of></xsl:attribute></xsl:if><xsl:value-of select="$value"></xsl:value-of><xsl:comment /></span></xsl:otherwise></xsl:choose><xsl:comment /></span></xsl:if></xsl:template></xsl:transform>