<?xml version="1.0" encoding="UTF-8"?><!--(c) 2003, 2013 LANSA--><!--XHTML Standard dynamic select--><!--$Workfile:: std_dynamic_select.xsl $--><!--$UTCDate:: 2013-05-01 05:19:38Z $--><!--$Revision:: 14 $--><xsl:transform version="1.0" exclude-result-prefixes="lxml wd xslt msxsl exslt" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xslt="http://www.lansa.com/2002/XSL/Transform-Alias" xmlns:lxml="http://www.lansa.com/2002/XML/Runtime-Data" xmlns:wd="http://www.lansa.com/2002/XSL/Weblet-Design" xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:exslt="http://exslt.org/common" xmlns="http://www.w3.org/1999/xhtml"><xsl:import href="std_keys.xsl"></xsl:import><xsl:import href="std_variables.xsl"></xsl:import><xsl:import href="std_types.xsl"></xsl:import><xsl:import href="std_util.xsl"></xsl:import><xsl:output method="xml" omit-xml-declaration="yes" encoding="UTF-8" indent="yes"></xsl:output><xsl:namespace-alias stylesheet-prefix="xslt" result-prefix="xsl"></xsl:namespace-alias><lxml:data><lxml:select><lxml:item><lxml:caption>Item 1</lxml:caption><lxml:value>Item 1</lxml:value></lxml:item><lxml:item><lxml:caption>Item 2</lxml:caption><lxml:value>Item 2</lxml:value></lxml:item></lxml:select><lxml:json>[]</lxml:json></lxml:data><xsl:template name="std_dynamic_select"><xsl:param name="name"></xsl:param><xsl:param name="id" select="$name"></xsl:param><xsl:param name="value"></xsl:param><xsl:param name="size" select="1"></xsl:param><xsl:param name="display_mode" select="'input'"></xsl:param><xsl:param name="hide_if" select="false()"></xsl:param><xsl:param name="items" select="document('')/*/lxml:data/lxml:select"></xsl:param><xsl:param name="listname"></xsl:param><xsl:param name="selectorField"></xsl:param><xsl:param name="selectorValueField"></xsl:param><xsl:param name="codeField"></xsl:param><xsl:param name="captionField"></xsl:param><xsl:param name="allowMultiSelect" select="false()"></xsl:param><xsl:param name="multiSelectListname"></xsl:param><xsl:param name="multiSelectCodefield"></xsl:param><xsl:param name="onChangeWamName" select="$lweb_WAMName"></xsl:param><xsl:param name="onChangeWrName"></xsl:param><xsl:param name="onChangeFormname" select="'LANSA'"></xsl:param><xsl:param name="onChangeExtraFields" select="document('')/*/lxml:data/lxml:json[not(@id)]"></xsl:param><xsl:param name="onChangeProtocol"></xsl:param><xsl:param name="onChangeTarget"></xsl:param><xsl:param name="position"></xsl:param><xsl:param name="width"></xsl:param><xsl:param name="disabled" select="false()"></xsl:param><xsl:param name="class" select="''"></xsl:param><xsl:param name="tabIndex"></xsl:param><xsl:param name="updateOnFieldChange" select="''"></xsl:param><xsl:param name="updateWamName" select="$lweb_WAMName"></xsl:param><xsl:param name="updateWrName"></xsl:param><xsl:param name="updateFieldsToSubmit" select="document('')/*/lxml:data/lxml:json[not(@id)]"></xsl:param><xsl:param name="updateProtocol"></xsl:param><xsl:param name="vf_wamevent" select="''"></xsl:param><xsl:if test="not($hide_if) or $lweb_design_mode"><xsl:variable name="list_xml"><xsl:if test="$listname = ''"><xsl:call-template name="expand_mtxt_in_xml_items.private"><xsl:with-param name="items" select="$items"></xsl:with-param></xsl:call-template></xsl:if></xsl:variable><span class="ui-widget"><xsl:choose><xsl:when test="$display_mode = 'output'"><span id="{$id}" class="std_dynamic_select {$class}"><xsl:attribute name="style"><xsl:text>white-space:nowrap;</xsl:text><xsl:if test="$position or $width"><xsl:call-template name="make_size_and_pos_style_v2.private"><xsl:with-param name="caller_name" select="'std_dynamic_select.xsl'"></xsl:with-param><xsl:with-param name="pos_absolute" select="$position"></xsl:with-param><xsl:with-param name="width" select="$width"></xsl:with-param></xsl:call-template></xsl:if></xsl:attribute></span></xsl:when><xsl:otherwise><select id="{$id}" name="{$name}" size="{$size}" class="std_dynamic_select {$class}"><xsl:if test="$position or $width"><xsl:attribute name="style"><xsl:call-template name="make_size_and_pos_style_v2.private"><xsl:with-param name="caller_name" select="'std_dynamic_select.xsl'"></xsl:with-param><xsl:with-param name="pos_absolute" select="$position"></xsl:with-param><xsl:with-param name="width" select="$width"></xsl:with-param></xsl:call-template></xsl:attribute></xsl:if><xsl:if test="$tabIndex != ''"><xsl:attribute name="tabindex"><xsl:value-of select="$tabIndex"></xsl:value-of></xsl:attribute></xsl:if><xsl:if test="boolean($disabled)"><xsl:attribute name="disabled">disabled</xsl:attribute></xsl:if><xsl:if test="$allowMultiSelect"><xsl:attribute name="multiple">multiple</xsl:attribute></xsl:if><xsl:if test="$vf_wamevent != ''"><xsl:attribute name="data-vf-wamevent"><xsl:value-of select="$vf_wamevent"></xsl:value-of></xsl:attribute></xsl:if><xsl:comment></xsl:comment></select></xsl:otherwise></xsl:choose><xsl:comment /></span><script type="text/javascript"><xsl:text disable-output-escaping="yes">//&lt;![CDATA[</xsl:text>
Lstd.Weblets.registerWeblet('<xsl:value-of select="$id"></xsl:value-of>', new Lstd.Weblets.stdDynamicSelect(), {<xsl:text></xsl:text><xsl:text></xsl:text>displayMode: "<xsl:value-of select="$display_mode"></xsl:value-of>", listname: "<xsl:value-of select="$listname"></xsl:value-of>", <xsl:text></xsl:text><xsl:text></xsl:text>value: "<xsl:value-of select="$value"></xsl:value-of>", selectorField: "<xsl:value-of select="$selectorField"></xsl:value-of>", <xsl:text></xsl:text><xsl:text></xsl:text>selectorValueField: "<xsl:value-of select="$selectorValueField"></xsl:value-of>", codeField: "<xsl:value-of select="$codeField"></xsl:value-of>", <xsl:text></xsl:text><xsl:text></xsl:text>captionField: "<xsl:value-of select="$captionField"></xsl:value-of>", disabled: "<xsl:value-of select="$disabled"></xsl:value-of>", <xsl:text></xsl:text><xsl:text></xsl:text>className: "<xsl:value-of select="$class"></xsl:value-of>", allowMultiSelect: <xsl:value-of select="boolean($allowMultiSelect)"></xsl:value-of>, <xsl:text></xsl:text><xsl:text></xsl:text>multiSelectListname: "<xsl:value-of select="$multiSelectListname"></xsl:value-of>", multiSelectCodefield: "<xsl:value-of select="$multiSelectCodefield"></xsl:value-of>", <xsl:text></xsl:text><xsl:text></xsl:text>onChangeWamName: "<xsl:value-of select="$onChangeWamName"></xsl:value-of>", onChangeWrName: "<xsl:value-of select="$onChangeWrName"></xsl:value-of>", <xsl:text></xsl:text><xsl:text></xsl:text>onChangeFormname: "<xsl:value-of select="$onChangeFormname"></xsl:value-of>", <xsl:text></xsl:text><xsl:if test="$onChangeExtraFields">onChangeExtraFields: <xsl:value-of select="$onChangeExtraFields" disable-output-escaping="yes"></xsl:value-of>,</xsl:if><xsl:text></xsl:text>onChangeProtocol: "<xsl:value-of select="$onChangeProtocol"></xsl:value-of>", onChangeTarget: "<xsl:value-of select="$onChangeTarget"></xsl:value-of>", <xsl:text></xsl:text><xsl:text></xsl:text>updateOnFieldChange: "<xsl:value-of select="$updateOnFieldChange"></xsl:value-of>", updateWamName: "<xsl:value-of select="$updateWamName"></xsl:value-of>", <xsl:text></xsl:text><xsl:text></xsl:text>updateWrName: "<xsl:value-of select="$updateWrName"></xsl:value-of>", <xsl:text></xsl:text><xsl:if test="$updateFieldsToSubmit">updateFieldsToSubmit: <xsl:value-of select="$updateFieldsToSubmit" disable-output-escaping="yes"></xsl:value-of>,</xsl:if><xsl:text></xsl:text>updateProtocol: "<xsl:value-of select="$updateProtocol"></xsl:value-of>", xmlColumnId: "<xsl:value-of select="descendant-or-self::lxml:column/@id"></xsl:value-of>", <xsl:text></xsl:text><xsl:text></xsl:text>list: <xsl:text></xsl:text><xsl:choose><xsl:when test="not($listname)"><xsl:text>Lstd.Json.factory(</xsl:text><xsl:choose><xsl:when test="$lweb_is_msxsl_nodeset"><xsl:call-template name="xml_to_json.private"><xsl:with-param name="list_xml" select="msxsl:node-set($list_xml)/*"></xsl:with-param><xsl:with-param name="listname" select="concat($name,'_xml')"></xsl:with-param></xsl:call-template></xsl:when><xsl:when test="$lweb_is_exslt_nodeset"><xsl:call-template name="xml_to_json.private"><xsl:with-param name="list_xml" select="exslt:node-set($list_xml)/*"></xsl:with-param><xsl:with-param name="listname" select="concat($name,'_xml')"></xsl:with-param></xsl:call-template></xsl:when></xsl:choose><xsl:text>)</xsl:text></xsl:when><xsl:otherwise><xsl:text>Lstd.Lists["</xsl:text><xsl:value-of select="$listname"></xsl:value-of><xsl:text>"]</xsl:text></xsl:otherwise></xsl:choose><xsl:text></xsl:text>});
<xsl:text disable-output-escaping="yes">//]]&gt;</xsl:text></script></xsl:if></xsl:template><xsl:template name="xml_to_json.private"><xsl:param name="list_xml"></xsl:param><xsl:param name="listname"></xsl:param>
		{"list":{"<xsl:value-of select="$listname"></xsl:value-of>":{
		"header":[{name: "caption","lxml:heading-3": "Caption"},
		{name: "value","lxml:heading-3": "Value"},
		{name: "selector","lxml:heading-3": "Selector"},
		{name: "default","lxml:heading-3": "Default"}],
		entries: [
		<xsl:for-each select="$list_xml/lxml:item">
			[
			"<xsl:value-of select="lxml:caption"></xsl:value-of>",
			"<xsl:value-of select="lxml:value"></xsl:value-of>",
			"<xsl:value-of select="@selector_value"></xsl:value-of>",
			"<xsl:value-of select="@default"></xsl:value-of>"
			]<xsl:if test="position() != last()">,</xsl:if></xsl:for-each>
		]}
		}
		}
	</xsl:template><xsl:template name="options_from_xml.private"><xsl:param name="list_xml"></xsl:param><xsl:param name="selectorValueField"></xsl:param><xsl:param name="value"></xsl:param><xsl:variable name="selector_value_eq" select="../*/lxml:column[@name='{$selectorValueField}'] | key('field-value', $selectorValueField)"></xsl:variable><xsl:for-each select="$list_xml/lxml:item[$selector_value_eq='' or not(@selector_value) or @selector_value=$selector_value_eq]"><xsl:element name="option"><xsl:attribute name="value"><xsl:value-of select="lxml:value"></xsl:value-of></xsl:attribute><xsl:if test="lxml:value = $value"><xsl:attribute name="selected">selected</xsl:attribute></xsl:if><xsl:choose><xsl:when test="lxml:caption != ''"><xsl:value-of select="lxml:caption"></xsl:value-of></xsl:when><xsl:otherwise><xsl:text disable-output-escaping="yes">&amp;nbsp;</xsl:text></xsl:otherwise></xsl:choose></xsl:element></xsl:for-each></xsl:template></xsl:transform>