<?xml version="1.0" encoding="UTF-8"?><!--(c) 2003, 2013 LANSA--><!--XHTML Standard dropdown--><!--$Workfile:: std_dropdown.xsl $--><!--$UTCDate:: 2013-05-01 05:19:38Z $--><!--$Revision:: 20 $--><xsl:transform version="1.0" exclude-result-prefixes="lxml wd msxsl exslt" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:lxml="http://www.lansa.com/2002/XML/Runtime-Data" xmlns:wd="http://www.lansa.com/2002/XSL/Weblet-Design" xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:exslt="http://exslt.org/common" xmlns="http://www.w3.org/1999/xhtml"><xsl:import href="std_keys.xsl"></xsl:import><xsl:import href="std_variables.xsl"></xsl:import><xsl:import href="std_types.xsl"></xsl:import><xsl:import href="std_select_list.xsl"></xsl:import><xsl:output method="xml" omit-xml-declaration="yes" encoding="UTF-8" indent="yes"></xsl:output><lxml:data><lxml:dropdown><lxml:item><lxml:caption>Item 1</lxml:caption><lxml:value>Item 1</lxml:value></lxml:item><lxml:item><lxml:caption>Item 2</lxml:caption><lxml:value>Item 2</lxml:value></lxml:item></lxml:dropdown></lxml:data><xsl:template name="std_dropdown"><xsl:param name="name"></xsl:param><xsl:param name="value"></xsl:param><xsl:param name="display_mode" select="'input'"></xsl:param><xsl:param name="items" select="document('')/*/lxml:data/lxml:dropdown"></xsl:param><xsl:param name="listname"></xsl:param><xsl:param name="selector_field"></xsl:param><xsl:param name="selector_value_eq"></xsl:param><xsl:param name="codefield"></xsl:param><xsl:param name="captionfield"></xsl:param><xsl:param name="tagfield1"></xsl:param><xsl:param name="tagfield2"></xsl:param><xsl:param name="tagfield3"></xsl:param><xsl:param name="submit_tagfields" select="true()"></xsl:param><xsl:param name="reentryfield" select="'STDRENTRY'"></xsl:param><xsl:param name="reentryvalue"></xsl:param><xsl:param name="hide_if" select="false()"></xsl:param><xsl:param name="formname" select="'LANSA'"></xsl:param><xsl:param name="pos_absolute"></xsl:param><xsl:param name="width_design"></xsl:param><xsl:param name="on_change_wamname" select="$lweb_WAMName"></xsl:param><xsl:param name="on_change_wrname"></xsl:param><xsl:param name="protocol"></xsl:param><xsl:param name="target_window_name"></xsl:param><xsl:param name="disabled" select="false()"></xsl:param><xsl:param name="class" select="'std_dropdown'"></xsl:param><xsl:param name="mouseover_class"></xsl:param><xsl:param name="tab_index"></xsl:param><xsl:param name="vf_wamevent" select="''"></xsl:param><xsl:if test="not($hide_if) or $lweb_design_mode"><xsl:variable name="bSubmitTags" select="$submit_tagfields and ($tagfield1!='' or $tagfield2!='' or $tagfield3!='')"></xsl:variable><xsl:variable name="list_xml"><xsl:if test="$listname = ''"><xsl:call-template name="expand_mtxt_in_xml_items.private"><xsl:with-param name="items" select="$items"></xsl:with-param></xsl:call-template></xsl:if></xsl:variable><span class="ui-widget"><xsl:choose><xsl:when test="$display_mode = 'output'"><span class="{$class}"><xsl:attribute name="style"><xsl:text>white-space:nowrap;</xsl:text><xsl:if test="$pos_absolute or $width_design"><xsl:call-template name="make_size_and_pos_style_v2.private"><xsl:with-param name="caller_name" select="'std_dropdown.xsl'"></xsl:with-param><xsl:with-param name="pos_absolute" select="$pos_absolute"></xsl:with-param><xsl:with-param name="width" select="$width_design"></xsl:with-param></xsl:call-template></xsl:if></xsl:attribute><xsl:if test="$mouseover_class != ''"><xsl:attribute name="onmouseover"><xsl:text>this.className = '</xsl:text><xsl:value-of select="$mouseover_class"></xsl:value-of><xsl:text>';</xsl:text></xsl:attribute><xsl:attribute name="onmouseout"><xsl:text>this.className = '</xsl:text><xsl:value-of select="$class"></xsl:value-of><xsl:text>';</xsl:text></xsl:attribute></xsl:if><xsl:variable name="display_value"><xsl:choose><xsl:when test="$listname"><xsl:value-of select="key('list',$listname)/lxml:list-entries/lxml:entry[(not($selector_field) or (boolean($selector_field) and ./lxml:column[@name=$selector_field] = $selector_value_eq)) and ./lxml:column[@name=$codefield] = $value]/lxml:column[@name=$captionfield]"></xsl:value-of></xsl:when><xsl:when test="$lweb_is_msxsl_nodeset"><xsl:value-of select="msxsl:node-set($list_xml)/*/lxml:item[($selector_value_eq='' or not(@selector_value) or @selector_value=$selector_value_eq) and lxml:value = $value]/lxml:caption"></xsl:value-of></xsl:when><xsl:when test="$lweb_is_exslt_nodeset"><xsl:value-of select="exslt:node-set($list_xml)/*/lxml:item[($selector_value_eq='' or not(@selector_value) or @selector_value=$selector_value_eq) and lxml:value = $value]/lxml:caption"></xsl:value-of></xsl:when></xsl:choose></xsl:variable><xsl:choose><xsl:when test="$display_value='' and $lweb_design_mode"><xsl:choose><xsl:when test="$value != ''"><xsl:value-of select="$value"></xsl:value-of></xsl:when><xsl:otherwise>Value of <xsl:value-of select="$name"></xsl:value-of></xsl:otherwise></xsl:choose></xsl:when><xsl:otherwise><xsl:value-of select="$display_value"></xsl:value-of></xsl:otherwise></xsl:choose><xsl:comment /></span></xsl:when><xsl:otherwise><select id="{$name}" name="{$name}" size="1" class="{$class}" reentryfld="{$reentryfield}" reentryval="{$reentryvalue}"><xsl:if test="$on_change_wrname != '' or $bSubmitTags"><xsl:attribute name="onchange"><xsl:text></xsl:text>std_DD_ListBoxOnChange(this, '<xsl:value-of select="$on_change_wamname"></xsl:value-of>', '<xsl:value-of select="$on_change_wrname"></xsl:value-of>', '<xsl:value-of select="$formname"></xsl:value-of>', '<xsl:value-of select="$target_window_name"></xsl:value-of>', <xsl:value-of select="$bSubmitTags"></xsl:value-of>, '<xsl:value-of select="$tagfield1"></xsl:value-of>', '<xsl:value-of select="$tagfield2"></xsl:value-of>', '<xsl:value-of select="$tagfield3"></xsl:value-of>', false, '', '', '<xsl:value-of select="$protocol"></xsl:value-of>');<xsl:text></xsl:text></xsl:attribute></xsl:if><xsl:attribute name="onkeydown"><xsl:text>std_DD_ListBoxOnKeyDown(document.</xsl:text><xsl:value-of select="$formname"></xsl:value-of><xsl:text>,event);</xsl:text></xsl:attribute><xsl:if test="$pos_absolute or $width_design"><xsl:attribute name="style"><xsl:call-template name="make_size_and_pos_style_v2.private"><xsl:with-param name="caller_name" select="'std_dropdown.xsl'"></xsl:with-param><xsl:with-param name="pos_absolute" select="$pos_absolute"></xsl:with-param><xsl:with-param name="width" select="$width_design"></xsl:with-param></xsl:call-template></xsl:attribute></xsl:if><xsl:if test="$mouseover_class != ''"><xsl:attribute name="onmouseover"><xsl:text>this.className = '</xsl:text><xsl:value-of select="$mouseover_class"></xsl:value-of><xsl:text>'</xsl:text></xsl:attribute><xsl:attribute name="onmouseout"><xsl:text>this.className = '</xsl:text><xsl:value-of select="$class"></xsl:value-of><xsl:text>'</xsl:text></xsl:attribute></xsl:if><xsl:if test="$tab_index != ''"><xsl:attribute name="tabindex"><xsl:value-of select="$tab_index"></xsl:value-of></xsl:attribute></xsl:if><xsl:if test="boolean($disabled)"><xsl:attribute name="disabled">disabled</xsl:attribute></xsl:if><xsl:if test="$vf_wamevent != ''"><xsl:attribute name="data-vf-wamevent"><xsl:value-of select="$vf_wamevent"></xsl:value-of></xsl:attribute></xsl:if><xsl:choose><xsl:when test="not($listname)"><xsl:choose><xsl:when test="$lweb_is_msxsl_nodeset"><xsl:call-template name="options_from_xml.private"><xsl:with-param name="list_xml" select="msxsl:node-set($list_xml)/*"></xsl:with-param><xsl:with-param name="selector_value_eq" select="$selector_value_eq"></xsl:with-param><xsl:with-param name="value" select="$value"></xsl:with-param></xsl:call-template></xsl:when><xsl:when test="$lweb_is_exslt_nodeset"><xsl:call-template name="options_from_xml.private"><xsl:with-param name="list_xml" select="exslt:node-set($list_xml)/*"></xsl:with-param><xsl:with-param name="selector_value_eq" select="$selector_value_eq"></xsl:with-param><xsl:with-param name="value" select="$value"></xsl:with-param></xsl:call-template></xsl:when></xsl:choose></xsl:when><xsl:otherwise><xsl:variable name="listItems" select="key('list',$listname)/lxml:list-entries/lxml:entry[not($selector_field) or (boolean($selector_field) and ./lxml:column[@name=$selector_field] = $selector_value_eq)]"></xsl:variable><xsl:variable name="valueCol" select="count($listItems[1]/lxml:column[@name=$codefield]/preceding-sibling::*) + 1"></xsl:variable><xsl:variable name="captionCol" select="count($listItems[1]/lxml:column[@name=$captionfield]/preceding-sibling::*) + 1"></xsl:variable><xsl:variable name="t1"><xsl:for-each select="$listItems[1]/lxml:column[@name=$tagfield1]"><xsl:value-of select="count(preceding-sibling::*) + 1"></xsl:value-of></xsl:for-each></xsl:variable><xsl:variable name="t2"><xsl:for-each select="$listItems[1]/lxml:column[@name=$tagfield2]"><xsl:value-of select="count(preceding-sibling::*) + 1"></xsl:value-of></xsl:for-each></xsl:variable><xsl:variable name="t3"><xsl:for-each select="$listItems[1]/lxml:column[@name=$tagfield3]"><xsl:value-of select="count(preceding-sibling::*) + 1"></xsl:value-of></xsl:for-each></xsl:variable><xsl:for-each select="$listItems"><option value="{lxml:column[$valueCol]}"><xsl:if test="$tagfield1 and $t1 != ''"><xsl:attribute name="tag_{$tagfield1}"><xsl:value-of select="lxml:column[number($t1)]"></xsl:value-of></xsl:attribute></xsl:if><xsl:if test="$tagfield2 and $t2 != ''"><xsl:attribute name="tag_{$tagfield2}"><xsl:value-of select="lxml:column[number($t2)]"></xsl:value-of></xsl:attribute></xsl:if><xsl:if test="$tagfield3 and $t3 != ''"><xsl:attribute name="tag_{$tagfield3}"><xsl:value-of select="lxml:column[number($t3)]"></xsl:value-of></xsl:attribute></xsl:if><xsl:if test="lxml:column[$valueCol] = $value"><xsl:attribute name="selected">selected</xsl:attribute></xsl:if><xsl:variable name="caption"><xsl:value-of select="lxml:column[$captionCol]"></xsl:value-of></xsl:variable><xsl:choose><xsl:when test="$caption"><xsl:value-of select="$caption"></xsl:value-of></xsl:when><xsl:otherwise><xsl:text disable-output-escaping="yes">&amp;nbsp;</xsl:text></xsl:otherwise></xsl:choose></option></xsl:for-each></xsl:otherwise></xsl:choose><xsl:comment /></select><xsl:variable name="defaultItemValue"><xsl:if test="not($listname)"><xsl:choose><xsl:when test="$lweb_is_msxsl_nodeset"><xsl:value-of select="msxsl:node-set($list_xml)/*/lxml:item[@default = 'true']/lxml:value"></xsl:value-of></xsl:when><xsl:when test="$lweb_is_exslt_nodeset"><xsl:value-of select="exslt:node-set($list_xml)/*/lxml:item[@default = 'true']/lxml:value"></xsl:value-of></xsl:when></xsl:choose></xsl:if></xsl:variable><xsl:if test="$defaultItemValue != ''"><script type="text/javascript"><xsl:text>stdListboxSelDft('</xsl:text><xsl:value-of select="$name"></xsl:value-of><xsl:text>', '</xsl:text><xsl:value-of select="$value"></xsl:value-of><xsl:text>', 1, '</xsl:text><xsl:value-of select="$defaultItemValue"></xsl:value-of><xsl:text>');</xsl:text><xsl:text>&#32;</xsl:text></script></xsl:if></xsl:otherwise></xsl:choose><xsl:comment /></span></xsl:if></xsl:template><xsl:template name="options_from_xml.private"><xsl:param name="list_xml"></xsl:param><xsl:param name="selector_value_eq"></xsl:param><xsl:param name="value"></xsl:param><xsl:for-each select="$list_xml/lxml:item[$selector_value_eq='' or not(@selector_value) or @selector_value=$selector_value_eq]"><xsl:element name="option"><xsl:attribute name="value"><xsl:value-of select="lxml:value"></xsl:value-of></xsl:attribute><xsl:if test="lxml:value = $value"><xsl:attribute name="selected">selected</xsl:attribute></xsl:if><xsl:for-each select="lxml:value/@*[starts-with(name(.), 'tag_')]"><xsl:attribute name="{name(.)}"><xsl:value-of select="."></xsl:value-of></xsl:attribute></xsl:for-each><xsl:choose><xsl:when test="lxml:caption != ''"><xsl:value-of select="lxml:caption"></xsl:value-of></xsl:when><xsl:otherwise><xsl:text disable-output-escaping="yes">&amp;nbsp;</xsl:text></xsl:otherwise></xsl:choose></xsl:element></xsl:for-each></xsl:template></xsl:transform>